{"version":3,"sources":["../node_modules/@iconify/icons-eva/edit-fill.js","components/HeaderBreadcrumbs.jsx","../node_modules/@iconify/icons-eva/trash-2-fill.js","../../src/index.ts","components/dashboard/account/AccountBillingAddressBook.jsx","components/dashboard/account/AccountBilling.jsx","components/dashboard/account/AccountChangePassword.jsx","pages/dashboard/users/PageAccountSetting.jsx"],"names":["exports","__esModule","default","HeaderBreadcrumbs","links","action","heading","moreLink","sx","other","mb","spacing","direction","alignItems","flexGrow","variant","gutterBottom","flexShrink","isString","href","target","map","noWrap","display","capitalCaseTransform","input","toLowerCase","AccountBillingAddressBook","addressBook","Card","p","Stack","Typography","color","Button","size","startIcon","icon","plusFill","AccountBilling","useSelector","state","user","cards","invoices","useState","NewCardSchema","useSnackbar","enqueueSnackbar","Yup","shape","cardName","required","cardNumber","cardExpired","cardCvv","useFormik","initialValues","validationSchema","onSubmit","values","a","setSubmitting","resetForm","Grid","container","item","xs","md","Box","mt","sm","position","top","right","mr","AccountChangePassword","ChangePassWordSchema","oldPassword","newPassword","min","confirmNewPassword","oneOf","formik","errors","touched","isSubmitting","handleSubmit","getFieldProps","value","autoComplete","noValidate","TextField","fullWidth","type","label","error","Boolean","helperText","LoadingButton","loading","UserAccount","currentTab","setCurrentTab","dispatch","useDispatch","useEffect","ACCOUNT_TABS","roundVpnKey","width","height","component","roundReceipt","Page","title","Container","name","PATH_DASHBOARD","app","Tabs","scrollButtons","allowScrollButtonsMobile","onChange","event","newValue","tab","Tab","disableRipple","options","delimiter","transform"],"mappings":"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","file":"static/js/29.369382a1.chunk.js","sourcesContent":["var data = {\n\t\"body\": \"<path fill=\\\"currentColor\\\" d=\\\"M19.4 7.34L16.66 4.6A2 2 0 0 0 14 4.53l-9 9a2 2 0 0 0-.57 1.21L4 18.91a1 1 0 0 0 .29.8A1 1 0 0 0 5 20h.09l4.17-.38a2 2 0 0 0 1.21-.57l9-9a1.92 1.92 0 0 0-.07-2.71zM16 10.68L13.32 8l1.95-2L18 8.73z\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\n// material\nimport { Box, Typography, Link, Stack } from '@material-ui/core';\n//\nimport { MBreadcrumbs } from './@material-extend';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Stack sx={sx} mb={2} spacing={2}>\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <MBreadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Stack>\n\n      {isString(moreLink) ? (\n        <Link href={moreLink} target=\"_blank\" variant=\"body2\">\n          {moreLink}\n        </Link>\n      ) : (\n        moreLink.map((href) => (\n          <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'flex' }}>\n            {href}\n          </Link>\n        ))\n      )}\n    </Stack>\n  );\n}\n","var data = {\n\t\"body\": \"<path fill=\\\"currentColor\\\" d=\\\"M21 6h-5V4.33A2.42 2.42 0 0 0 13.5 2h-3A2.42 2.42 0 0 0 8 4.33V6H3a1 1 0 0 0 0 2h1v11a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V8h1a1 1 0 0 0 0-2zM10 16a1 1 0 0 1-2 0v-4a1 1 0 0 1 2 0zm0-11.67c0-.16.21-.33.5-.33h3c.29 0 .5.17.5.33V6h-4zM16 16a1 1 0 0 1-2 0v-4a1 1 0 0 1 2 0z\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","import { noCase, Options } from \"no-case\";\nimport { upperCaseFirst } from \"upper-case-first\";\n\nexport { Options };\n\nexport function capitalCaseTransform(input: string) {\n  return upperCaseFirst(input.toLowerCase());\n}\n\nexport function capitalCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \" \",\n    transform: capitalCaseTransform,\n    ...options,\n  });\n}\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport editFill from '@iconify/icons-eva/edit-fill';\nimport trash2Fill from '@iconify/icons-eva/trash-2-fill';\n// material\nimport { Box, Card, Button, Typography, Stack, Paper } from '@material-ui/core';\nimport { MButton } from '../../@material-extend';\n//\n\n// ----------------------------------------------------------------------\n\nAccountBillingAddressBook.propTypes = {\n  addressBook: PropTypes.array\n};\n\nexport default function AccountBillingAddressBook({ addressBook }) {\n  return (\n    <Card sx={{ p: 3 }}>\n      <Stack spacing={3} alignItems=\"flex-start\">\n        <Typography variant=\"overline\" sx={{ color: 'text.secondary' }}>\n          Billing Info\n        </Typography>\n\n        {/* {addressBook.map((address) => ( */}\n        {/*  <Paper */}\n        {/*    key={address.id} */}\n        {/*    sx={{ */}\n        {/*      p: 3, */}\n        {/*      width: 1, */}\n        {/*      bgcolor: 'background.neutral' */}\n        {/*    }} */}\n        {/*  > */}\n        {/*    <Typography variant=\"subtitle1\" gutterBottom> */}\n        {/*      {address.name} */}\n        {/*    </Typography> */}\n\n        {/*    <Typography variant=\"body2\" gutterBottom> */}\n        {/*      <Typography variant=\"body2\" component=\"span\" sx={{ color: 'text.secondary' }}> */}\n        {/*        Address: &nbsp; */}\n        {/*      </Typography> */}\n        {/*      {`${address.street}, ${address.city}, ${address.state}, ${address.country} ${address.zipCode}`} */}\n        {/*    </Typography> */}\n\n        {/*    <Typography variant=\"body2\" gutterBottom> */}\n        {/*      <Typography variant=\"body2\" component=\"span\" sx={{ color: 'text.secondary' }}> */}\n        {/*        Phone: &nbsp; */}\n        {/*      </Typography> */}\n        {/*      {address.phone} */}\n        {/*    </Typography> */}\n\n        {/*    <Box sx={{ mt: 1 }}> */}\n        {/*      <MButton */}\n        {/*        color=\"error\" */}\n        {/*        size=\"small\" */}\n        {/*        startIcon={<Icon icon={trash2Fill} />} */}\n        {/*        onClick={() => {}} */}\n        {/*        sx={{ mr: 1 }} */}\n        {/*      > */}\n        {/*        Delete */}\n        {/*      </MButton> */}\n        {/*      <Button size=\"small\" startIcon={<Icon icon={editFill} />} onClick={() => {}}> */}\n        {/*        Edit */}\n        {/*      </Button> */}\n        {/*    </Box> */}\n        {/*  </Paper> */}\n        {/* ))} */}\n\n        <Button size=\"small\" startIcon={<Icon icon={plusFill} />}>\n          Add new address\n        </Button>\n      </Stack>\n    </Card>\n  );\n}\n","import * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport { useState } from 'react';\nimport { useSnackbar } from 'notistack';\n// material\nimport { Box, Grid, Card, Button, Typography, Stack } from '@material-ui/core';\n// redux\nimport { useSelector } from 'react-redux';\n// util\n//\nimport AccountBillingAddressBook from './AccountBillingAddressBook';\n\n// ----------------------------------------------------------------------\n\nexport default function AccountBilling() {\n  const { cards, invoices, addressBook } = useSelector((state) => state.user);\n  const [open, setOpen] = useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const NewCardSchema = Yup.object().shape({\n    cardName: Yup.string().required('Name is required'),\n    cardNumber: Yup.string().required('Card number is required'),\n    cardExpired: Yup.string().required('Card expired is required'),\n    cardCvv: Yup.string().required('Cvv is required')\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      cardName: '',\n      cardNumber: '',\n      cardExpired: '',\n      cardCvv: ''\n    },\n    validationSchema: NewCardSchema,\n    onSubmit: async (values, { setSubmitting, resetForm }) => {}\n  });\n\n  const handleOpenAddCard = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleCancel = () => {\n    setOpen(false);\n    formik.resetForm();\n  };\n\n  return (\n    <Grid container spacing={5}>\n      <Grid item xs={12} md={12}>\n        <Stack spacing={3}>\n          <Card sx={{ p: 3 }}>\n            <Typography variant=\"overline\" sx={{ mb: 3, display: 'block', color: 'text.secondary' }}>\n              Your Plan\n            </Typography>\n            <Typography variant=\"h4\">Premium</Typography>\n            <Box\n              sx={{\n                mt: { xs: 2, sm: 0 },\n                position: { sm: 'absolute' },\n                top: { sm: 24 },\n                right: { sm: 24 }\n              }}\n            >\n              <Button size=\"small\" color=\"inherit\" variant=\"outlined\" sx={{ mr: 1 }}>\n                Cancel plan\n              </Button>\n              <Button size=\"small\" variant=\"outlined\">\n                Upgrade plan\n              </Button>\n            </Box>\n          </Card>\n\n          <AccountBillingAddressBook addressBook={addressBook} />\n        </Stack>\n      </Grid>\n    </Grid>\n  );\n}\n","import * as Yup from 'yup';\nimport { useSnackbar } from 'notistack';\nimport { useFormik, Form, FormikProvider } from 'formik';\n// material\nimport { Stack, Card, TextField } from '@material-ui/core';\nimport { LoadingButton } from '@material-ui/lab';\n// utils\n\n// ----------------------------------------------------------------------\n\nexport default function AccountChangePassword() {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const ChangePassWordSchema = Yup.object().shape({\n    oldPassword: Yup.string().required('Old Password is required'),\n    newPassword: Yup.string().min(6, 'Password must be at least 6 characters').required('New Password is required'),\n    confirmNewPassword: Yup.string().oneOf([Yup.ref('newPassword'), null], 'Passwords must match')\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      oldPassword: '',\n      newPassword: '',\n      confirmNewPassword: ''\n    },\n    validationSchema: ChangePassWordSchema,\n    onSubmit: async (values, { setSubmitting }) => {}\n  });\n\n  const { errors, touched, isSubmitting, handleSubmit, getFieldProps } = formik;\n\n  return (\n    <Card sx={{ p: 3 }}>\n      <FormikProvider value={formik}>\n        <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n          <Stack spacing={3} alignItems=\"flex-end\">\n            <TextField\n              {...getFieldProps('oldPassword')}\n              fullWidth\n              autoComplete=\"on\"\n              type=\"password\"\n              label=\"Old Password\"\n              error={Boolean(touched.oldPassword && errors.oldPassword)}\n              helperText={touched.oldPassword && errors.oldPassword}\n            />\n\n            <TextField\n              {...getFieldProps('newPassword')}\n              fullWidth\n              autoComplete=\"on\"\n              type=\"password\"\n              label=\"New Password\"\n              error={Boolean(touched.newPassword && errors.newPassword)}\n              helperText={(touched.newPassword && errors.newPassword) || 'Password must be minimum 6+'}\n            />\n\n            <TextField\n              {...getFieldProps('confirmNewPassword')}\n              fullWidth\n              autoComplete=\"on\"\n              type=\"password\"\n              label=\"Confirm New Password\"\n              error={Boolean(touched.confirmNewPassword && errors.confirmNewPassword)}\n              helperText={touched.confirmNewPassword && errors.confirmNewPassword}\n            />\n\n            <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n              Save Changes\n            </LoadingButton>\n          </Stack>\n        </Form>\n      </FormikProvider>\n    </Card>\n  );\n}\n","import { Icon } from '@iconify/react';\nimport { capitalCase } from 'change-case';\nimport { useState, useEffect } from 'react';\nimport roundVpnKey from '@iconify/icons-ic/round-vpn-key';\nimport roundReceipt from '@iconify/icons-ic/round-receipt';\n// material\nimport { Container, Tab, Box, Tabs, Stack } from '@material-ui/core';\n// redux\nimport { useDispatch } from 'react-redux';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n// components\nimport Page from '../../../components/Page';\nimport HeaderBreadcrumbs from '../../../components/HeaderBreadcrumbs';\nimport { AccountBilling, AccountChangePassword } from '../../../components/dashboard/account';\n\n// ----------------------------------------------------------------------\n\nexport default function UserAccount() {\n  const [currentTab, setCurrentTab] = useState('change_password');\n  const dispatch = useDispatch();\n\n  useEffect(() => {}, [dispatch]);\n\n  const ACCOUNT_TABS = [\n    {\n      value: 'change_password',\n      icon: <Icon icon={roundVpnKey} width={20} height={20} />,\n      component: <AccountChangePassword />\n    },\n    {\n      value: 'billing',\n      icon: <Icon icon={roundReceipt} width={20} height={20} />,\n      component: <AccountBilling />\n    }\n  ];\n\n  const handleChangeTab = (event, newValue) => {\n    setCurrentTab(newValue);\n  };\n\n  return (\n    <Page title=\"User: Account Settings | Minimal-UI\">\n      <Container>\n        <HeaderBreadcrumbs\n          heading=\"Account\"\n          links={[\n            { name: 'Dashboard', href: PATH_DASHBOARD.app },\n            { name: 'User', href: PATH_DASHBOARD.app },\n            { name: 'Account Settings' }\n          ]}\n        />\n\n        <Stack spacing={5}>\n          <Tabs\n            value={currentTab}\n            scrollButtons=\"auto\"\n            variant=\"scrollable\"\n            allowScrollButtonsMobile\n            onChange={handleChangeTab}\n          >\n            {ACCOUNT_TABS.map((tab) => (\n              <Tab disableRipple key={tab.value} label={capitalCase(tab.value)} icon={tab.icon} value={tab.value} />\n            ))}\n          </Tabs>\n\n          {ACCOUNT_TABS.map((tab) => {\n            const isMatched = tab.value === currentTab;\n            return isMatched && <Box key={tab.value}>{tab.component}</Box>;\n          })}\n        </Stack>\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}