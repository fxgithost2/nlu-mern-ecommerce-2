{"version":3,"sources":["components/@input/CustomPhoneInput.jsx","pages/authentication/Register.jsx"],"names":["CustomPhoneInput","RootStyle","styled","Page","theme","breakpoints","up","display","SectionStyle","Card","width","maxWidth","flexDirection","justifyContent","margin","spacing","ContentStyle","minHeight","padding","Register","t","useLocales","useState","useEffect","window","recaptchaVerifier","firebase","auth","RecaptchaVerifier","size","defaultCountry","callback","response","console","log","Yup","shape","phone","required","matches","title","AuthLayout","Link","underline","variant","component","RouterLink","to","PATH_AUTH","login","Typography","sx","px","mt","mb","alt","src","Container","Box","gutterBottom","color","AuthWithSocial","isLogin","align","textAlign"],"mappings":"iZAkDeA,I,SCxBTC,EAAYC,YAAOC,IAAPD,EAAa,gBAAGE,EAAH,EAAGA,MAAH,sBAC5BA,EAAMC,YAAYC,GAAG,MAAQ,CAC5BC,QAAS,YAIPC,EAAeN,YAAOO,IAAPP,EAAa,kBAAgB,CAChDQ,MAAO,OACPC,SAAU,IACVJ,QAAS,OACTK,cAAe,SACfC,eAAgB,SAChBC,OANgC,EAAGV,MAMrBW,QAAQ,EAAG,EAAG,EAAG,OAG3BC,EAAed,YAAO,MAAPA,EAAc,kBAAgB,CACjDS,SAAU,IACVG,OAAQ,OACRP,QAAS,OACTU,UAAW,QACXL,cAAe,SACfC,eAAgB,SAChBK,QAPiC,EAAGd,MAOrBW,QAAQ,GAAI,OAKd,SAASI,IACtB,IAAQC,EAAMC,cAAND,EAER,EAA8BE,mBAAS,MAAvC,mBACA,GADA,UACsCA,mBAAS,KAA/C,mBACA,GADA,UACgCA,mBAAS,KAAzC,mBACA,GADA,UACkCA,oBAAS,IAA3C,6BAEAC,qBAAU,WAERC,OAAOC,kBAAoB,IAAIC,IAASC,KAAKC,kBAAkB,sBAAuB,CACpFC,KAAM,YACNC,eAAgB,KAChBC,SAAU,SAACC,GACTC,QAAQC,IAAI,WAAYF,QAG3B,IAEsBG,MAAaC,MAAM,CAC1CC,MAAOF,MACJG,SAASlB,EAAE,2BACXmB,QAAQ,sEAAuEnB,EAAE,4BAStF,OACE,eAACnB,EAAD,CAAWuC,MAAOpB,EAAE,4BAApB,UACE,eAACqB,EAAA,EAAD,WACGrB,EAAE,6BADL,QAEE,cAACsB,EAAA,EAAD,CAAMC,UAAU,OAAOC,QAAQ,YAAYC,UAAWC,IAAYC,GAAIC,IAAUC,MAAhF,SACG7B,EAAE,mBAIP,cAAC,IAAD,CAASV,MAAM,SAAf,SACE,eAACF,EAAD,WACE,cAAC0C,EAAA,EAAD,CAAYN,QAAQ,KAAKO,GAAI,CAAEC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAlD,SACGlC,EAAE,8BAEL,qBAAKmC,IAAI,WAAWC,IAAI,yDAI5B,cAACC,EAAA,EAAD,UACE,eAACzC,EAAD,WACE,eAAC0C,EAAA,EAAD,CAAKP,GAAI,CAAEG,GAAI,GAAf,UACE,cAACJ,EAAA,EAAD,CAAYN,QAAQ,KAAKe,cAAY,EAArC,SACGvC,EAAE,yBAEL,cAAC8B,EAAA,EAAD,CAAYC,GAAI,CAAES,MAAO,kBAAzB,SAA8CxC,EAAE,+BAGlD,cAACyC,EAAA,EAAD,CAAgBC,SAAS,IAiBzB,eAACZ,EAAA,EAAD,CAAYN,QAAQ,QAAQmB,MAAM,SAASZ,GAAI,CAAES,MAAO,iBAAkBP,GAAI,GAA9E,UACGjC,EAAE,qBADL,OAEE,cAACsB,EAAA,EAAD,CAAMC,UAAU,SAASQ,GAAI,CAAES,MAAO,gBAAtC,SACGxC,EAAE,cAHP,OAKSA,EAAE,cALX,OAME,cAACsB,EAAA,EAAD,CAAMC,UAAU,SAASQ,GAAI,CAAES,MAAO,gBAAtC,SACGxC,EAAE,yBAPP,OAYA,cAAC,IAAD,CAASV,MAAM,OAAf,SACE,eAACwC,EAAA,EAAD,CAAYN,QAAQ,YAAYO,GAAI,CAAEE,GAAI,EAAGW,UAAW,UAAxD,UACG5C,EAAE,6BADL,OAEE,cAACsB,EAAA,EAAD,CAAMK,GAAIC,IAAUC,MAAOJ,UAAWC,IAAtC,SACG1B,EAAE","file":"static/js/34.a091ed08.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport PhoneInput from 'react-phone-input-2';\nimport './css/react-phone-input-2.css';\n\nfunction CustomPhoneInput(props) {\n  const {\n    label = 'Phone',\n    country = 'vn',\n    preferredCountries = ['vn', 'us'],\n    inputProps = {},\n    masks = { vn: '... ... ...' },\n    onEnter,\n    ...otherProps\n  } = props;\n\n  const handleKeyDown = (event) => {\n    if (event.key === 'Enter' && typeof onEnter === 'function') {\n      onEnter();\n    }\n  };\n\n  return (\n    <PhoneInput\n      country={country}\n      preferredCountries={preferredCountries}\n      specialLabel={label}\n      onKeyDown={handleKeyDown}\n      enableSearch\n      inputProps={{\n        name: 'phone',\n        required: true,\n        autoFocus: true,\n        style: { width: '100%' },\n        ...{ inputProps }\n      }}\n      masks={masks}\n      {...otherProps}\n    />\n  );\n}\n\nCustomPhoneInput.propTypes = {\n  label: PropTypes.string,\n  country: PropTypes.string,\n  preferredCountries: PropTypes.arrayOf(PropTypes.string),\n  masks: PropTypes.object,\n  onEnter: PropTypes.func,\n  inputProps: PropTypes.any\n};\n\nexport default CustomPhoneInput;\n","// material\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\nimport { Alert, Box, Card, Link, Container, Stack, Typography } from '@material-ui/core';\nimport { LoadingButton } from '@material-ui/lab';\n// form validation\nimport * as Yup from 'yup';\nimport { Form, FormikProvider, useFormik } from 'formik';\n//\nimport { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n// hooks\nimport { useLocales } from '../../hooks';\n// routes\nimport { PATH_AUTH } from '../../routes/paths';\n// layouts\nimport AuthLayout from '../../layouts/AuthLayout';\n// components\nimport Page from '../../components/Page';\nimport { MHidden } from '../../components/@material-extend';\nimport AuthWithSocial from '../../components/authentication/AuthWithSocial';\nimport { CustomPhoneInput } from '../../components/@input';\n// firebase\nimport firebase, { auth as firebaseAuth } from '../../firebase';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Page)(({ theme }) => ({\n  [theme.breakpoints.up('md')]: {\n    display: 'flex'\n  }\n}));\n\nconst SectionStyle = styled(Card)(({ theme }) => ({\n  width: '100%',\n  maxWidth: 464,\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  margin: theme.spacing(2, 0, 2, 2)\n}));\n\nconst ContentStyle = styled('div')(({ theme }) => ({\n  maxWidth: 480,\n  margin: 'auto',\n  display: 'flex',\n  minHeight: '100vh',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(12, 0)\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function Register() {\n  const { t } = useLocales();\n\n  const [country, setCountry] = useState(null);\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [errorMgs, setErrorMgs] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    // eslint-disable-next-line import/no-named-as-default-member\n    window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('invisible-recaptcha', {\n      size: 'invisible',\n      defaultCountry: 'VN',\n      callback: (response) => {\n        console.log('response', response);\n      }\n    });\n  }, []);\n\n  const PhoneInputSchema = Yup.object().shape({\n    phone: Yup.string()\n      .required(t('address.phone-required'))\n      .matches(/^\\(?(([0-9]{3})|(\\+84[0-9]{2}))\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/, t('address.phone-invalid'))\n  });\n\n  const handleRegister = () => {\n    if (phoneNumber === country.code) {\n      setErrorMgs(t('auth.phone-required'));\n    }\n  };\n\n  return (\n    <RootStyle title={t('auth.page-title.register')}>\n      <AuthLayout>\n        {t('auth.already-have-account')} &nbsp;\n        <Link underline=\"none\" variant=\"subtitle2\" component={RouterLink} to={PATH_AUTH.login}>\n          {t('auth.login')}\n        </Link>\n      </AuthLayout>\n\n      <MHidden width=\"mdDown\">\n        <SectionStyle>\n          <Typography variant=\"h3\" sx={{ px: 5, mt: 10, mb: 5 }}>\n            {t('auth.register-salutation')}\n          </Typography>\n          <img alt=\"register\" src=\"/static/illustrations/illustration_register.png\" />\n        </SectionStyle>\n      </MHidden>\n\n      <Container>\n        <ContentStyle>\n          <Box sx={{ mb: 5 }}>\n            <Typography variant=\"h4\" gutterBottom>\n              {t('auth.register-title')}\n            </Typography>\n            <Typography sx={{ color: 'text.secondary' }}>{t('auth.register-subtitle')}</Typography>\n          </Box>\n\n          <AuthWithSocial isLogin={false} />\n\n          {/* <Stack spacing={3}> */}\n          {/*  {errorMgs && <Alert severity=\"error\">{errorMgs}</Alert>} */}\n          {/*  <CustomPhoneInput */}\n          {/*    label={t('auth.phone')} */}\n          {/*    value={phoneNumber} */}\n          {/*    onChange={(phone) => setPhoneNumber(phone.trim())} */}\n          {/*    onEnter={handleRegister} */}\n          {/*  /> */}\n          {/*  <LoadingButton fullWidth size=\"large\" variant=\"contained\" onClick={handleRegister}> */}\n          {/*    {t('auth.register')} */}\n          {/*  </LoadingButton> */}\n          {/* </Stack> */}\n\n          {/* <RegisterForm /> */}\n\n          <Typography variant=\"body2\" align=\"center\" sx={{ color: 'text.secondary', mt: 3 }}>\n            {t('auth.accept-terms')}&nbsp;\n            <Link underline=\"always\" sx={{ color: 'text.primary' }}>\n              {t('auth.tos')}\n            </Link>\n            &nbsp;{t('common.and')}&nbsp;\n            <Link underline=\"always\" sx={{ color: 'text.primary' }}>\n              {t('auth.privacy-policy')}\n            </Link>\n            .\n          </Typography>\n\n          <MHidden width=\"smUp\">\n            <Typography variant=\"subtitle2\" sx={{ mt: 3, textAlign: 'center' }}>\n              {t('auth.already-have-account')}&nbsp;\n              <Link to={PATH_AUTH.login} component={RouterLink}>\n                {t('auth.login')}\n              </Link>\n            </Typography>\n          </MHidden>\n        </ContentStyle>\n      </Container>\n    </RootStyle>\n  );\n}\n"],"sourceRoot":""}