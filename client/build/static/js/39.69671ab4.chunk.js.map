{"version":3,"sources":["../node_modules/@iconify/icons-eva/plus-fill.js","pages/main/ProductListPage.jsx"],"names":["exports","__esModule","default","ContentStyle","styled","theme","position","width","paddingTop","spacing","paddingBottom","backgroundColor","palette","grey","mode","ProductListPage","query","useQuery","t","useLocales","dispatch","useDispatch","navigate","useNavigate","brandSlug","get","categorySlug","search","useSelector","state","searchProduct","isInitialized","categoryOpts","brandOpts","selectedCategories","selectedBrands","productsApi","list","isLoadingProduct","isLoading","pagination","useState","decodeURIComponent","searchText","setSearchText","products","setProducts","page","setPage","useEffect","initialSearch","cs","filter","x","split","includes","slug","setSelectedCategories","bs","setSelectedBrands","b","map","_id","join","c","category","brand","limit","prev","handleSearch","_prev","bQuery","cQuery","encodeURIComponent","title","id","maxWidth","sx","marginBottom","padding","variant","component","toUpperCase","fullWidth","label","value","onChange","e","target","onKeyDown","key","InputProps","startAdornment","icon","searchFill","container","item","xs","sm","multiple","options","getOptionLabel","name","filterSelectedOptions","renderInput","params","_e","color","paddingX","onClick","total","countAll","hasNextPage","display","justifyContent","mt","loading"],"mappings":"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","file":"static/js/39.69671ab4.chunk.js","sourcesContent":["var data = {\n\t\"body\": \"<path fill=\\\"currentColor\\\" d=\\\"M19 11h-6V5a1 1 0 0 0-2 0v6H5a1 1 0 0 0 0 2h6v6a1 1 0 0 0 2 0v-6h6a1 1 0 0 0 0-2z\\\"/>\",\n\t\"width\": 24,\n\t\"height\": 24\n};\nexports.__esModule = true;\nexports.default = data;\n","// icons\nimport { Icon } from '@iconify/react';\nimport searchFill from '@iconify/icons-eva/search-fill';\n// material\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\nimport {\n  Autocomplete,\n  Box,\n  Button,\n  Container,\n  Card,\n  CardContent,\n  Grid,\n  InputAdornment,\n  Stack,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport { LoadingButton } from '@material-ui/lab';\n// hooks\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport useQuery from '../../hooks/useQuery';\nimport useLocales from '../../hooks/useLocales';\n// components\nimport Page from '../../components/Page';\nimport { ProductList } from '../../components/e-commerce';\n\nimport {\n  initialSearch,\n  searchProduct,\n  setSelectedCategories,\n  setSelectedBrands\n} from '../../redux/slices/searchProductSlice';\n\n// ----------------------------------------------------------------------\n\nconst ContentStyle = styled('div')(({ theme }) => ({\n  position: 'relative',\n  width: '100%',\n  paddingTop: theme.spacing(2),\n  paddingBottom: theme.spacing(10),\n  backgroundColor: theme.palette.grey[theme.palette.mode === 'light' ? 100 : 800]\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function ProductListPage() {\n  const query = useQuery();\n  const { t } = useLocales();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const brandSlug = query.get('b');\n  const categorySlug = query.get('c');\n  const search = query.get('search');\n\n  const {\n    isInitialized,\n    categoryOpts,\n    brandOpts,\n    selectedCategories,\n    selectedBrands,\n    list: productsApi,\n    isLoading: isLoadingProduct,\n    pagination\n  } = useSelector((state) => state.searchProduct);\n\n  const [searchText, setSearchText] = useState(decodeURIComponent(search || ''));\n\n  const [products, setProducts] = useState([]);\n  const [page, setPage] = useState(1);\n  const limit = 10;\n\n  useEffect(() => {\n    dispatch(initialSearch());\n  }, [dispatch]);\n\n  useEffect(() => {\n    const cs = [...categoryOpts.filter((x) => categorySlug?.split(',').includes(x.slug))];\n    dispatch(setSelectedCategories(cs));\n    const bs = [...brandOpts.filter((x) => brandSlug?.split(',').includes(x.slug))];\n    dispatch(setSelectedBrands(bs));\n\n    const b = selectedBrands.map((x) => x._id).join(',');\n    const c = selectedCategories.map((x) => x._id).join(',');\n    dispatch(searchProduct({ search: searchText, category: c, brand: b, page, limit }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, isInitialized, categorySlug, brandSlug, search, page]);\n\n  useEffect(() => {\n    if (page === 1) {\n      setProducts([...productsApi]);\n    } else {\n      setProducts((prev) => [...prev, ...productsApi]);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [productsApi]);\n\n  const handleLoadMore = () => {\n    setPage((page) => page + 1);\n  };\n\n  const handleSearchTextKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      handleSearch();\n    }\n  };\n\n  const handleSearchTextChange = (e) => {\n    setSearchText(e.target.value);\n  };\n\n  const handleCategoriesChange = (_e, value) => {\n    dispatch(setSelectedCategories(value));\n  };\n\n  const handleBrandsChange = (_e, value) => {\n    dispatch(setSelectedBrands(value));\n  };\n\n  const handleSearch = () => {\n    setProducts((_prev) => []);\n    const bQuery = selectedBrands.map((x) => x.slug).join(',');\n    const cQuery = selectedCategories.map((x) => x.slug).join(',');\n\n    setPage(1);\n    dispatch(searchProduct({ search: searchText, page, limit }));\n    navigate(`/q?c=${cQuery}&b=${bQuery}&search=${encodeURIComponent(searchText)}`);\n  };\n\n  return (\n    <Page title={t('home.page-title')} id=\"move_top\">\n      <ContentStyle>\n        <Container maxWidth=\"lg\">\n          <Stack spacing={5}>\n            <Box>\n              <Card sx={{ marginBottom: 1, padding: 2 }}>\n                <CardContent>\n                  <Stack spacing={2}>\n                    <Typography variant=\"h5\" component=\"h2\">\n                      {t('products.heading').toUpperCase()}\n                    </Typography>\n                    <TextField\n                      fullWidth\n                      label={t('products.name')}\n                      value={searchText}\n                      onChange={handleSearchTextChange}\n                      onKeyDown={handleSearchTextKeyDown}\n                      InputProps={{\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            <Icon icon={searchFill} />\n                          </InputAdornment>\n                        )\n                      }}\n                    />\n                    <Box>\n                      <Grid container spacing={2}>\n                        <Grid item xs={12} sm={6}>\n                          <Autocomplete\n                            multiple\n                            fullWidth\n                            options={categoryOpts}\n                            getOptionLabel={(item) => item.name}\n                            value={selectedCategories}\n                            filterSelectedOptions\n                            renderInput={(params) => <TextField {...params} label={t('dashboard.categories.title')} />}\n                            onChange={handleCategoriesChange}\n                          />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                          <Autocomplete\n                            multiple\n                            fullWidth\n                            options={brandOpts}\n                            getOptionLabel={(item) => item?.name}\n                            value={selectedBrands}\n                            filterSelectedOptions\n                            renderInput={(params) => <TextField {...params} label={t('dashboard.brands.title')} />}\n                            onChange={handleBrandsChange}\n                          />\n                        </Grid>\n                      </Grid>\n                    </Box>\n                    <Box>\n                      <Button variant=\"contained\" color=\"primary\" sx={{ paddingX: 5 }} onClick={handleSearch}>\n                        {t('home.search')}\n                      </Button>\n                    </Box>\n                    <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n                      {isLoadingProduct\n                        ? 'Đang tìm kiếm'\n                        : `Tìm thấy ${pagination?.total || 0}/${pagination?.countAll || 0} sản phẩm`}\n                    </Typography>\n                  </Stack>\n                </CardContent>\n              </Card>\n              <ProductList products={products} isLoading={isLoadingProduct} />\n              {pagination?.hasNextPage && (\n                <Box sx={{ display: 'flex', justifyContent: 'center', mt: 3 }}>\n                  <LoadingButton\n                    variant=\"outlined\"\n                    sx={{ backgroundColor: 'white', width: '50%' }}\n                    onClick={handleLoadMore}\n                    loading={isLoadingProduct}\n                  >\n                    Xem thêm\n                  </LoadingButton>\n                </Box>\n              )}\n            </Box>\n          </Stack>\n        </Container>\n      </ContentStyle>\n    </Page>\n  );\n}\n"],"sourceRoot":""}