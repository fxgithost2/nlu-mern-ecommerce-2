{"version":3,"sources":["utils/labelColor.js","components/dashboard/order/OrderCard.jsx","components/dashboard/order/OrderDetailForm.jsx","components/dashboard/order/OrderListHead.jsx","components/dashboard/order/OrderListToolbar.jsx","components/dashboard/order/OrderTableRow.jsx","../node_modules/@material-ui/icons/Close.js"],"names":["getOrderStatusColor","status","getPaymentStatusColor","RowResultStyle","styled","TableRow","theme","paddingTop","spacing","paddingBottom","ROW_RESULT_CELL_WIDTH","InfoItem","label","value","valueVariant","Box","display","alignItems","Typography","align","variant","component","sx","color","width","flex","marginLeft","OrderCard","order","isShowTitle","handleRePay","t","useLocales","Card","pt","px","mb","Grid","container","item","xs","sm","ml","numericId","_id","textAlign","Label","textTransform","paragraph","address","name","customer","phone","isReceiveAtStore","street","ward","district","province","mr","Stack","paymentMethod","paymentStatus","undefined","indexOf","Link","href","onClick","Scrollbar","TableContainer","minWidth","Table","TableHead","borderBottom","palette","divider","backgroundColor","TableCell","TableBody","items","map","index","thumbnail","alt","src","objectFit","height","marginRight","maxWidth","underline","target","productId","productName","variantName","noWrap","quantity","fCurrency","pricePerUnit","colSpan","mt","subTotal","discount","shippingFee","total","Divider","md","py","toUpperCase","note","OrderDetailForm","open","setOpen","handleUpdate","actionReOrder","actionCancelOrder","useState","orderStatus","setOrderStatus","setPaymentStatus","setPaymentMethod","hasChange","setHasChange","orderStatusList","paymentStatusList","paymentMethodList","useEffect","handleChangeOrderStatus","event","handleChangePaymentStatus","handleChangePaymentMethod","handleClose","_event","reason","handleSave","handleCancelOrder","handleReOrder","Dialog","fullWidth","onClose","DialogTitle","justifyContent","marginBottom","IconButton","edge","DialogContent","variants","varFadeInUp","DialogActions","Autocomplete","disableClearable","options","getOptionLabel","find","renderInput","params","TextField","onChange","Button","size","disabled","includes","OrderListHead","orderBy","headLabel","rowCount","onRequestSort","numSelected","onSelectAllClick","headCell","numeric","padding","disablePadding","sortDirection","id","TableSortLabel","active","direction","property","visuallyHidden","ToolbarStyle","Toolbar","breakpoints","down","SearchStyle","OutlinedInput","transition","transitions","create","easing","easeInOut","duration","shorter","fontStyle","boxShadow","customShadows","z8","borderWidth","borderColor","grey","OrderListToolbar","search","onSearchChange","onKeyDown","onChangeOrderStatus","onChangePaymentStatus","title","placeholder","startAdornment","InputAdornment","position","Icon","icon","searchFill","OrderTableRow","row","currentLang","hover","scope","fDateTime","createdAt","eyeFill","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"mappings":"wIAAA,oEAAO,IAAMA,EAAsB,SAACC,GAClC,OAAQA,GACN,IAAK,UACH,MAAO,UACT,IAAK,YACH,MAAO,UACT,IAAK,YACH,MAAO,QACT,QAEE,MAAO,SAIAC,EAAwB,SAACD,GACpC,OAAQA,GACN,IAAK,UACH,MAAO,UACT,IAAK,OACH,MAAO,UACT,IAAK,YACH,MAAO,QACT,QACE,MAAO,U,8XCIPE,EAAiBC,YAAOC,IAAPD,EAAiB,gBAAGE,EAAH,EAAGA,MAAH,MAAgB,CACtD,OAAQ,CACNC,WAAYD,EAAME,QAAQ,GAC1BC,cAAeH,EAAME,QAAQ,QAY3BE,EAAwB,IAIxBC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,aAAjB,OACf,eAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOC,WAAW,SAA/B,UACE,cAACC,EAAA,EAAD,CAAYC,MAAM,OAAOC,QAAQ,QAAQC,UAAU,OAAOC,GAAI,CAAEC,MAAO,iBAAkBC,MAL1E,KAKf,SACGZ,IAEH,cAACM,EAAA,EAAD,CAAYE,QAASN,EAAcQ,GAAI,CAAEG,KAAM,EAAGC,WAAY,GAA9D,SACGb,QAKQ,SAASc,EAAT,GAAyD,IAAD,gBAAnCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,YAC9CC,EAAMC,cAAND,EACR,OACE,eAACE,EAAA,EAAD,CAAMX,GAAI,CAAEY,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAA9B,UACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACGT,GACC,qCACE,eAACQ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGnB,GAAI,CAAEc,GAAI,GAApC,UACE,cAAClB,EAAA,EAAD,CAAYE,QAAQ,QAAQC,UAAU,OAAOC,GAAI,CAAEC,MAAO,kBAA1D,SACGQ,EAAE,iBAEL,cAACb,EAAA,EAAD,CAAYE,QAAQ,KAAKE,GAAI,CAAEN,QAAS,eAAgB0B,GAAI,GAA5D,qBACY,OAALd,QAAK,IAALA,OAAA,EAAAA,EAAOe,aAAP,OAAoBf,QAApB,IAAoBA,OAApB,EAAoBA,EAAOgB,WAIpC,cAACP,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGnB,GAAI,CAAEc,GAAI,GAApC,SACE,cAACrB,EAAA,EAAD,CAAKO,GAAI,CAAEuB,UAAW,CAAEJ,GAAI,UAA5B,SACE,cAACK,EAAA,EAAD,CAAOvB,MAAOvB,YAAmB,OAAC4B,QAAD,IAACA,OAAD,EAACA,EAAO3B,QAASqB,GAAI,CAAEyB,cAAe,YAAaX,GAAI,GAAxF,SACGL,EAAE,gBAAD,cAAiBH,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAO3B,kBAOpC,eAACoC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGnB,GAAI,CAAEc,GAAI,GAApC,UACE,cAAClB,EAAA,EAAD,CAAY8B,WAAS,EAAC5B,QAAQ,WAAWE,GAAI,CAAEC,MAAO,iBAAtD,8BAGA,cAAC,EAAD,CACEX,MAAOmB,EAAE,qBACTlB,OAAY,OAALe,QAAK,IAALA,GAAA,UAAAA,EAAOqB,eAAP,eAAgBC,QAAhB,OAAwBtB,QAAxB,IAAwBA,GAAxB,UAAwBA,EAAOuB,gBAA/B,aAAwB,EAAiBD,MAChDpC,aAAa,cAEf,cAAC,EAAD,CACEF,MAAOmB,EAAE,iBACTlB,OAAY,OAALe,QAAK,IAALA,GAAA,UAAAA,EAAOqB,eAAP,eAAgBG,SAAhB,OAAyBxB,QAAzB,IAAyBA,GAAzB,UAAyBA,EAAOuB,gBAAhC,aAAyB,EAAiBC,OACjDtC,aAAa,WAET,OAALc,QAAK,IAALA,OAAA,EAAAA,EAAOyB,kBAEN,cAACnC,EAAA,EAAD,CAAYC,MAAM,OAAOC,QAAQ,QAAQC,UAAU,OAAOC,GAAI,CAAEC,MAAO,kBAAvE,SACGQ,EAAE,2BAGL,cAAC,EAAD,CACEnB,MAAOmB,EAAE,iBACTlB,MAAK,iBAAKe,QAAL,IAAKA,GAAL,UAAKA,EAAOqB,eAAZ,aAAK,EAAgBK,OAArB,oBAAgC1B,QAAhC,IAAgCA,GAAhC,UAAgCA,EAAOqB,eAAvC,aAAgC,EAAgBM,KAAhD,oBAAyD3B,QAAzD,IAAyDA,GAAzD,UAAyDA,EAAOqB,eAAhE,aAAyD,EAAgBO,SAAzE,oBAAsF5B,QAAtF,IAAsFA,OAAtF,EAAsFA,EAAOqB,QAAQQ,UAC1G3C,aAAa,aAKnB,eAACuB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGnB,GAAI,CAAEc,GAAI,GAApC,UACE,cAAClB,EAAA,EAAD,CAAY8B,WAAS,EAAC5B,QAAQ,WAAWE,GAAI,CAAEC,MAAO,gBAAiBmC,GAAI,GAA3E,sDAGA,eAACC,EAAA,EAAD,CAAOnD,QAAS,EAAhB,UACE,eAACO,EAAA,EAAD,CAAKC,QAAQ,OAAOC,WAAW,SAA/B,UACE,cAACC,EAAA,EAAD,CAAYE,QAAQ,QAAQC,UAAU,OAAOC,GAAI,CAAEC,MAAO,iBAAkBmC,GAAI,EAAGlC,MAAO,KAA1F,SACGO,EAAE,0BAEL,cAACb,EAAA,EAAD,CAAYE,QAAQ,QAAQC,UAAU,OAAtC,SACGU,EAAE,wBAAD,cAAyBH,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAOgC,qBAGtC,eAAC7C,EAAA,EAAD,CAAKC,QAAQ,OAAOC,WAAW,SAA/B,UACE,cAACC,EAAA,EAAD,CAAYE,QAAQ,QAAQC,UAAU,OAAOC,GAAI,CAAEC,MAAO,iBAAkBmC,GAAI,EAAGlC,MAAO,KAA1F,SACGO,EAAE,wBAEL,cAACe,EAAA,EAAD,CAAOvB,MAAOvB,YAAmB,OAAC4B,QAAD,IAACA,OAAD,EAACA,EAAO3B,QAASqB,GAAI,CAAEyB,cAAe,aAAvE,SACGhB,EAAE,gBAAD,cAAiBH,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAO3B,cAI9B,eAACc,EAAA,EAAD,CAAKC,QAAQ,OAAOC,WAAW,SAA/B,UACE,cAACC,EAAA,EAAD,CAAYE,QAAQ,QAAQC,UAAU,OAAOC,GAAI,CAAEC,MAAO,iBAAkBmC,GAAI,EAAGlC,MAAO,KAA1F,SACGO,EAAE,0BAEL,cAACe,EAAA,EAAD,CAAOvB,MAAOrB,YAAqB,OAAC0B,QAAD,IAACA,OAAD,EAACA,EAAOiC,eAAgBvC,GAAI,CAAEyB,cAAe,aAAhF,SACGhB,EAAE,wBAAD,cAAyBH,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAOiC,kBAEnB,OAAhB/B,GAC0B,aAApB,OAALF,QAAK,IAALA,OAAA,EAAAA,EAAOiC,gBACP,CAAC,OAAQ,MAAO,QAAIC,EAAW,MAAMC,QAArC,OAA6CnC,QAA7C,IAA6CA,OAA7C,EAA6CA,EAAOgC,eAAiB,GACnE,cAACI,EAAA,EAAD,CAAMC,KAAK,IAAIC,QAASpC,EAAaR,GAAI,CAAEoB,GAAI,GAA/C,4CASZ,cAACyB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAgB9C,GAAI,CAAE+C,SAAU,KAAhC,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEjD,GAAI,CACFkD,aAAc,SAAClE,GAAD,0BAAwBA,EAAMmE,QAAQC,UACpD,OAAQ,CAAEC,gBAAiB,gBAH/B,SAME,eAACtE,EAAA,EAAD,WACE,cAACuE,EAAA,EAAD,CAAWpD,MAAO,GAAlB,eACA,cAACoD,EAAA,EAAD,CAAWzD,MAAM,OAAjB,SAAyBY,EAAE,oBAC3B,cAAC6C,EAAA,EAAD,CAAWzD,MAAM,SAAjB,SAA2BY,EAAE,uBAC7B,cAAC6C,EAAA,EAAD,CAAWzD,MAAM,QAAjB,SAA0BY,EAAE,qBAC5B,cAAC6C,EAAA,EAAD,CAAWzD,MAAM,QAAjB,SAA0BY,EAAE,4BAIhC,eAAC8C,EAAA,EAAD,kBACGjD,QADH,IACGA,OADH,EACGA,EAAOkD,MAAMC,KAAI,SAACxC,EAAMyC,GAAP,OAChB,eAAC3E,EAAA,EAAD,CAAsBiB,GAAI,CAAEkD,aAAc,SAAClE,GAAD,0BAAwBA,EAAMmE,QAAQC,WAAhF,UACE,cAACE,EAAA,EAAD,UAAYI,EAAQ,IACpB,eAACJ,EAAA,EAAD,CAAWzD,MAAM,OAAOG,GAAI,CAAEN,QAAS,OAAQC,WAAY,UAA3D,WACO,OAAJsB,QAAI,IAAJA,OAAA,EAAAA,EAAM0C,WACL,cAAC,IAAD,CAAeC,IAAI,gBAAgBC,IAAG,OAAE5C,QAAF,IAAEA,OAAF,EAAEA,EAAM0C,UAAWG,UAAU,YAEnE,cAAC,IAAD,CAAiB5D,MAAO,GAAI6D,OAAQ,GAAIC,YAAa,IAEvD,eAACvE,EAAA,EAAD,CAAKO,GAAI,CAAEiE,SAAU,KAArB,UACE,cAACvB,EAAA,EAAD,CAAMwB,UAAU,QAAQpE,QAAQ,YAAYqE,OAAO,SAASxB,KAAI,mBAAc1B,EAAKmD,WAAnF,SACGnD,EAAKoD,cAEPpD,EAAKqD,aACJ,cAAC1E,EAAA,EAAD,CAAYE,QAAQ,QAAQE,GAAI,CAAEC,MAAO,kBAAoBsE,QAAM,EAAnE,SACGtD,EAAKqD,oBAKd,cAAChB,EAAA,EAAD,CAAWzD,MAAM,SAAjB,SAA2BoB,EAAKuD,WAChC,cAAClB,EAAA,EAAD,CAAWzD,MAAM,QAAjB,SAA0B4E,YAAUxD,EAAKyD,gBACzC,cAACpB,EAAA,EAAD,CAAWzD,MAAM,QAAjB,SAA0B4E,YAAUxD,EAAKyD,aAAezD,EAAKuD,cArBhDd,MAyBjB,eAAC7E,EAAD,WACE,cAACyE,EAAA,EAAD,CAAWqB,QAAS,IACpB,eAACrB,EAAA,EAAD,CAAWzD,MAAM,QAAjB,UACE,cAACJ,EAAA,EAAD,CAAKO,GAAI,CAAE4E,GAAI,KACf,cAAChF,EAAA,EAAD,CAAYE,QAAQ,QAApB,SAA6BW,EAAE,6BAEjC,eAAC6C,EAAA,EAAD,CAAWzD,MAAM,QAAQK,MAAOd,EAAhC,UACE,cAACK,EAAA,EAAD,CAAKO,GAAI,CAAE4E,GAAI,KACf,cAAChF,EAAA,EAAD,CAAYE,QAAQ,QAApB,SAA6B2E,YAAS,OAACnE,QAAD,IAACA,OAAD,EAACA,EAAOuE,kBAGlD,eAAChG,EAAD,WACE,cAACyE,EAAA,EAAD,CAAWqB,QAAS,IACpB,cAACrB,EAAA,EAAD,CAAWzD,MAAM,QAAjB,SACE,cAACD,EAAA,EAAD,CAAYE,QAAQ,QAApB,SAA6BW,EAAE,2BAEjC,cAAC6C,EAAA,EAAD,CAAWzD,MAAM,QAAQK,MAAOd,EAAhC,SACE,cAACQ,EAAA,EAAD,CAAYI,GAAI,CAAEC,MAAO,cAAzB,SAA0CwE,cAAU,OAACnE,QAAD,IAACA,OAAD,EAACA,EAAOwE,oBAI/D,OAACxE,QAAD,IAACA,OAAD,EAACA,EAAOyB,mBACP,eAAClD,EAAD,WACE,cAACyE,EAAA,EAAD,CAAWqB,QAAS,IACpB,cAACrB,EAAA,EAAD,CAAWzD,MAAM,QAAjB,SACE,cAACD,EAAA,EAAD,CAAYE,QAAQ,QAApB,SAA6BW,EAAE,+BAEjC,cAAC6C,EAAA,EAAD,CAAWzD,MAAM,QAAQK,MAAOd,EAAhC,SACE,cAACQ,EAAA,EAAD,CAAYE,QAAQ,QAApB,SAA6B2E,YAAS,OAACnE,QAAD,IAACA,OAAD,EAACA,EAAOyE,oBAIpD,eAAClG,EAAD,WACE,cAACyE,EAAA,EAAD,CAAWqB,QAAS,IACpB,cAACrB,EAAA,EAAD,CAAWzD,MAAM,QAAjB,SACE,cAACD,EAAA,EAAD,CAAYE,QAAQ,KAApB,SAA0BW,EAAE,wBAE9B,cAAC6C,EAAA,EAAD,CAAWzD,MAAM,QAAQK,MAAOd,EAAhC,SACE,cAACQ,EAAA,EAAD,CAAYE,QAAQ,KAApB,SAA0B2E,YAAS,OAACnE,QAAD,IAACA,OAAD,EAACA,EAAO0E,wBAQvD,cAACC,EAAA,EAAD,CAASjF,GAAI,CAAE4E,GAAI,KAEnB,cAAC7D,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,eAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIgE,GAAI,EAAGlF,GAAI,CAAEmF,GAAI,GAApC,UACE,cAACvF,EAAA,EAAD,CAAYE,QAAQ,YAApB,SAAiCW,EAAE,gBAAgB2E,gBACnD,cAACxF,EAAA,EAAD,CAAYE,QAAQ,QAApB,UAAkC,OAALQ,QAAK,IAALA,GAAA,UAAAA,EAAOqB,eAAP,eAAgB0D,OAAQ5E,EAAE,gC,6ICpNlD,SAAS6E,EAAT,GAAoG,IAAzEhF,EAAwE,EAAxEA,MAAOiF,EAAiE,EAAjEA,KAAMC,EAA2D,EAA3DA,QAASC,EAAkD,EAAlDA,aAAcC,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,kBACnFlF,EAAMC,cAAND,EAER,EAAsCmF,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA0CF,mBAAS,IAAnD,mBAAOrD,EAAP,KAAsBwD,EAAtB,KACA,EAA0CH,mBAAS,IAAnD,mBAAOtD,EAAP,KAAsB0D,EAAtB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAEMC,EAAkB,CACtB,CACE7G,MAAOmB,EAAE,wBACTlB,MAAO,WAET,CACED,MAAOmB,EAAE,0BACTlB,MAAO,aAET,CACED,MAAOmB,EAAE,yBACTlB,MAAO,YAET,CACED,MAAOmB,EAAE,0BACTlB,MAAO,aAET,CACED,MAAOmB,EAAE,0BACTlB,MAAO,cAIL6G,EAAoB,CACxB,CACE9G,MAAOmB,EAAE,gCACTlB,MAAO,WAET,CACED,MAAOmB,EAAE,6BACTlB,MAAO,SAIL8G,EAAoB,CACxB,CACE/G,MAAOmB,EAAE,6BACTlB,MAAO,QAET,CACED,MAAOmB,EAAE,4BACTlB,MAAO,OAET,CACED,MAAOmB,EAAE,8BACTlB,MAAO,UAIX+G,qBAAU,WACRR,EAAc,OAACxF,QAAD,IAACA,OAAD,EAACA,EAAO3B,QACtBoH,EAAgB,OAACzF,QAAD,IAACA,OAAD,EAACA,EAAOiC,eACxByD,EAAgB,OAAC1F,QAAD,IAACA,OAAD,EAACA,EAAOgC,eACxB4D,GAAa,KACZ,CAAC5F,IAEJ,IAAMiG,EAA0B,SAACC,EAAOjH,GACtCuG,EAAevG,EAAMA,OACjBA,EAAMA,QAAUe,EAAM3B,QACxBuH,GAAa,IAIXO,EAA4B,SAACD,EAAOjH,GACxCwG,EAAiBxG,EAAMA,OACnBA,EAAMA,QAAUe,EAAMiC,eACxB2D,GAAa,IAIXQ,EAA4B,SAACF,EAAOjH,GACxCyG,EAAiBzG,EAAMA,OACnBA,EAAMA,QAAUe,EAAMgC,eACxB4D,GAAa,IAIXS,EAAc,SAACC,EAAQC,KACvBA,GAAsB,kBAAXA,GAAyC,kBAAXA,IAG7CrB,GAAQ,IAGJsB,EAAa,WACjBrB,EAAanF,EAAMgB,IAAK,CAAE3C,OAAQkH,EAAatD,gBAAeD,kBAC9DkD,GAAQ,IAGJuB,EAAoB,WACxBrB,EAAcpF,EAAMgB,KACpBkE,GAAQ,IAGJwB,EAAgB,WACpBrB,EAAkBrF,EAAMgB,KACxBkE,GAAQ,IAyEV,OACE,eAACyB,EAAA,EAAD,CAAQC,WAAS,EAACjD,SAAS,KAAKsB,KAAMA,EAAM4B,QAASR,EAArD,UACE,cAACS,EAAA,EAAD,UACE,eAAC3H,EAAA,EAAD,CAAKC,QAAQ,OAAOC,WAAW,SAAS0H,eAAe,gBAAvD,UACE,eAACzH,EAAA,EAAD,CAAYE,QAAQ,KAAKwH,aAAc,EAAGtH,GAAI,CAAEyB,cAAe,YAAaX,GAAI,GAAhF,2CACaR,QADb,IACaA,OADb,EACaA,EAAOe,aAEpB,cAACkG,EAAA,EAAD,CAAYtH,MAAM,UAAUuH,KAAK,QAAQ5E,QAAS+D,EAAlD,SACE,cAAC,IAAD,WAIN,cAACc,EAAA,EAAD,UACE,cAAC,IAAD,CAAcC,SAAUC,IAAxB,SACE,cAACtH,EAAD,CAAWC,MAAOA,EAAOC,aAAa,QAG1C,cAACqH,EAAA,EAAD,UACE,cAACnI,EAAA,EAAD,CAAKO,GAAI,CAAEE,MAAO,QAAlB,SAvFCuF,EAqBH,eAAC1E,EAAA,EAAD,CAAMC,WAAS,EAAC9B,QAAS,EAAzB,UACE,cAAC6B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,SACE,cAAC0G,EAAA,EAAD,CACEX,WAAS,EACTY,kBAAgB,EAChBC,QAAS5B,EACT6B,eAAgB,SAAC/G,GAAD,cAAUA,QAAV,IAAUA,OAAV,EAAUA,EAAM3B,OAChCC,MAAO4G,EAAgB8B,MAAK,SAAChH,GAAD,OAAUA,EAAK1B,QAAUsG,KACrDqC,YAAa,SAACC,GAAD,OAAY,cAACC,EAAA,EAAD,2BAAeD,GAAf,IAAuB7I,MAAOmB,EAAE,0BACzD4H,SAAU9B,MAGd,cAACxF,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,SACE,cAAC0G,EAAA,EAAD,CACEX,WAAS,EACTY,kBAAgB,EAChBC,QAAS3B,EACT4B,eAAgB,SAAC/G,GAAD,cAAUA,QAAV,IAAUA,OAAV,EAAUA,EAAM3B,OAChCC,MAAO6G,EAAkB6B,MAAK,SAAChH,GAAD,OAAUA,EAAK1B,QAAUgD,KACvD2F,YAAa,SAACC,GAAD,OAAY,cAACC,EAAA,EAAD,2BAAeD,GAAf,IAAuB7I,MAAOmB,EAAE,4BACzD4H,SAAU5B,MAGd,cAAC1F,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,SACE,cAAC0G,EAAA,EAAD,CACEX,WAAS,EACTY,kBAAgB,EAChBC,QAAS1B,EACT2B,eAAgB,SAAC/G,GAAD,cAAUA,QAAV,IAAUA,OAAV,EAAUA,EAAM3B,OAChCC,MAAO8G,EAAkB4B,MAAK,SAAChH,GAAD,OAAUA,EAAK1B,QAAU+C,KACvD4F,YAAa,SAACC,GAAD,OAAY,cAACC,EAAA,EAAD,2BAAeD,GAAf,IAAuB7I,MAAOmB,EAAE,4BACzD4H,SAAU3B,MAGd,cAAC3F,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,SACE,eAAC1B,EAAA,EAAD,CAAKC,QAAQ,OAAOC,WAAW,SAASK,GAAI,CAAE+D,OAAQ,QAAtD,UACE,cAACuE,EAAA,EAAD,CAAQtI,GAAI,CAAEoC,GAAI,GAAK8E,WAAS,EAACqB,KAAK,QAAQtI,MAAM,UAAUH,QAAQ,WAAW8C,QAAS+D,EAA1F,SACGlG,EAAE,mBAEL,cAAC6H,EAAA,EAAD,CAAQpB,WAAS,EAACqB,KAAK,QAAQzI,QAAQ,WAAW0I,UAAWvC,EAAWrD,QAASkE,EAAjF,SACGrG,EAAE,yBA3DT,eAAChB,EAAA,EAAD,CAAKC,QAAQ,OAAOC,WAAW,SAAS0H,eAAe,WAAWrH,GAAI,CAAE+D,OAAQ,QAAhF,UACE,cAACuE,EAAA,EAAD,CACEtI,GAAI,CAAEoC,GAAI,GACVmG,KAAK,QACLtI,MAAM,UACNH,QAAQ,WACR8C,QAASmE,EACTyB,UAAW,CAAC,UAAW,aAAaC,SAAzB,OAAkCnI,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAO3B,QANtD,4CAUA,cAAC2J,EAAA,EAAD,CAAQC,KAAK,QAAQzI,QAAQ,WAAW8C,QAASoE,EAAewB,SAA4B,eAAb,OAALlI,QAAK,IAALA,OAAA,EAAAA,EAAO3B,QAAjF,8C,wBC5IK,SAAS+J,EAAT,GAQX,IAPFpI,EAOC,EAPDA,MACAqI,EAMC,EANDA,QAEAC,GAIC,EALDC,SAKC,EAJDD,WAEAE,GAEC,EAHDC,YAGC,EAFDD,eAEC,EADDE,iBAMA,OACE,cAAC/F,EAAA,EAAD,UACE,cAAClE,EAAA,EAAD,UACG6J,EAAUnF,KAAI,SAACwF,GAAD,OACb,cAAC3F,EAAA,EAAD,CAEEzD,MAAOoJ,EAASC,QAAU,QAAU,OACpCC,QAASF,EAASG,eAAiB,OAAS,SAC5CC,cAAeV,IAAYM,EAASK,IAAKhJ,EAJ3C,SAME,eAACiJ,EAAA,EAAD,CACEC,OAAQb,IAAYM,EAASK,GAC7BG,UAAWd,IAAYM,EAASK,GAAKhJ,EAAQ,MAC7CsC,SAjBe8G,EAiBYT,EAASK,GAjBR,SAAC9C,GACvCsC,EAActC,EAAOkD,KAab,UAKGT,EAAS3J,MACTqJ,IAAYM,EAASK,GACpB,cAAC7J,EAAA,EAAD,CAAKM,UAAU,OAAOC,GAAE,eAAO2J,KAA/B,SACa,SAAVrJ,EAAmB,oBAAsB,qBAE1C,SAfD2I,EAASK,IATE,IAACI,S,yHCGvBE,GAAe9K,YAAO+K,KAAP/K,EAAgB,gBAAGE,EAAH,EAAGA,MAAH,oBACnC+E,OAAQ,GACRrE,QAAS,OACT2H,eAAgB,gBAChB8B,QAASnK,EAAME,QAAQ,EAAG,EAAG,EAAG,IAC/BF,EAAM8K,YAAYC,KAAK,MAAQ,CAC9BhG,OAAQ,SAINiG,GAAclL,YAAOmL,KAAPnL,EAAsB,gBAAGE,EAAH,EAAGA,MAAH,MAAgB,CACxDkB,MAAO,IACPgK,WAAYlL,EAAMmL,YAAYC,OAAO,CAAC,aAAc,SAAU,CAC5DC,OAAQrL,EAAMmL,YAAYE,OAAOC,UACjCC,SAAUvL,EAAMmL,YAAYI,SAASC,UAEvC,iBAAkB,CAChBC,UAAW,UAEb,gBAAiB,CAAEvK,MAAO,OAAQwK,UAAW1L,EAAM2L,cAAcC,IACjE,aAAc,CACZC,YAAY,iBACZC,YAAY,GAAD,OAAK9L,EAAMmE,QAAQ4H,KAAK,OAAxB,oBAgBA,SAASC,GAAT,GAQX,IAPFC,EAOC,EAPDA,OACAC,EAMC,EANDA,eACAC,EAKC,EALDA,UACAtF,EAIC,EAJDA,YACAuF,EAGC,EAHDA,oBACA7I,EAEC,EAFDA,cACA8I,EACC,EADDA,sBAEQ5K,EAAMC,cAAND,EAEF0F,EAAkB,CACtB,CACE7G,MAAOmB,EAAE,oBACTlB,MAAO,IAET,CACED,MAAOmB,EAAE,wBACTlB,MAAO,WAET,CACED,MAAOmB,EAAE,0BACTlB,MAAO,aAET,CACED,MAAOmB,EAAE,yBACTlB,MAAO,YAET,CACED,MAAOmB,EAAE,0BACTlB,MAAO,aAET,CACED,MAAOmB,EAAE,0BACTlB,MAAO,cAIL6G,EAAoB,CACxB,CACE9G,MAAOmB,EAAE,4BACTlB,MAAO,IAET,CACED,MAAOmB,EAAE,gCACTlB,MAAO,WAET,CACED,MAAOmB,EAAE,6BACTlB,MAAO,SAIX,OACE,mCACE,cAACqK,GAAD,UACE,cAACnK,EAAA,EAAD,CAAKO,GAAI,CAAEE,MAAO,QAAlB,SACE,eAACa,EAAA,EAAD,CAAMC,WAAS,EAAC9B,QAAS,EAAzB,UACE,cAAC6B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC6I,GAAD,CACEzB,KAAK,QACLhJ,MAAO0L,EACP5C,SAAU6C,EACVC,UAAWA,EACXG,MAAO7K,EAAE,iCACT8K,YAAa9K,EAAE,4BACf+K,eACE,cAACC,GAAA,EAAD,CAAgBC,SAAS,QAAzB,SACE,cAACjM,EAAA,EAAD,CAAKM,UAAW4L,OAAMC,KAAMC,IAAY7L,GAAI,CAAEC,MAAO,yBAK7D,cAACc,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,SACE,cAAC0G,EAAA,EAAD,CACEU,KAAK,QACLrB,WAAS,EACTY,kBAAgB,EAChBC,QAAS5B,EACT6B,eAAgB,SAAC/G,GAAD,cAAUA,QAAV,IAAUA,OAAV,EAAUA,EAAM3B,OAChCC,MAAO4G,EAAgB8B,MAAK,SAAChH,GAAD,OAAUA,EAAK1B,QAAUsG,KAErDqC,YAAa,SAACC,GAAD,OAAY,cAACC,EAAA,EAAD,2BAAeD,GAAf,IAAuB7I,MAAOmB,EAAE,0BACzD4H,SAAU+C,MAGd,cAACrK,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,SACE,cAAC0G,EAAA,EAAD,CACEU,KAAK,QACLrB,WAAS,EACTY,kBAAgB,EAChBC,QAAS3B,EACT4B,eAAgB,SAAC/G,GAAD,cAAUA,QAAV,IAAUA,OAAV,EAAUA,EAAM3B,OAChCC,MAAO6G,EAAkB6B,MAAK,SAAChH,GAAD,OAAUA,EAAK1B,QAAUgD,KAEvD2F,YAAa,SAACC,GAAD,OAAY,cAACC,EAAA,EAAD,2BAAeD,GAAf,IAAuB7I,MAAOmB,EAAE,4BACzD4H,SAAUgD,e,sEChJX,SAASS,GAAT,GAA0C,IAAD,IAAhBC,EAAgB,EAAhBA,IAAKnJ,EAAW,EAAXA,QAC3C,EAA2BlC,cAAnBD,EAAR,EAAQA,EAAGuL,EAAX,EAAWA,YAMX,OACE,eAACjN,EAAA,EAAD,CAAUkN,OAAK,EAAf,UACE,cAAC3I,EAAA,EAAD,CAAWzD,MAAM,OAAOqM,MAAM,MAAM/C,QAAQ,OAA5C,gBACG4C,QADH,IACGA,OADH,EACGA,EAAK1K,YAER,cAACiC,EAAA,EAAD,CAAW4I,MAAM,MAAM/C,QAAQ,OAA/B,SACE,cAACvJ,EAAA,EAAD,CAAYE,QAAQ,YAAYyE,QAAM,EAAtC,gBACGwH,QADH,IACGA,GADH,UACGA,EAAKlK,gBADR,aACG,EAAeD,SAGpB,cAAC0B,EAAA,EAAD,CAAWzD,MAAM,OAAOsJ,QAAQ,OAAhC,gBACG4C,QADH,IACGA,GADH,UACGA,EAAKlK,gBADR,aACG,EAAeC,QAElB,cAACwB,EAAA,EAAD,CAAWzD,MAAM,OAAOsJ,QAAQ,OAAhC,SACE,cAAC3H,EAAA,EAAD,CAAOvB,MAAOvB,YAAmB,OAACqN,QAAD,IAACA,OAAD,EAACA,EAAKpN,QAASqB,GAAI,CAAEyB,cAAe,aAArE,SACGhB,EAAE,gBAAD,cAAiBsL,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAKpN,aAG5B,cAAC2E,EAAA,EAAD,CAAWzD,MAAM,OAAOsJ,QAAQ,OAAhC,SACE,cAAC3H,EAAA,EAAD,CAAOvB,MAAOrB,YAAqB,OAACmN,QAAD,IAACA,OAAD,EAACA,EAAKxJ,eAAgBvC,GAAI,CAAEyB,cAAe,aAA9E,SACGhB,EAAE,wBAAD,cAAyBsL,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAKxJ,oBAGpC,cAACe,EAAA,EAAD,CAAWzD,MAAM,OAAOsJ,QAAQ,OAAhC,SACG1I,EAAE,wBAAD,cAAyBsL,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAKzJ,kBAElC,cAACgB,EAAA,EAAD,CAAWzD,MAAM,QAAjB,SAA0B4E,YAAS,OAACsH,QAAD,IAACA,OAAD,EAACA,EAAK/G,MAAOgH,EAAYzM,SAC5D,cAAC+D,EAAA,EAAD,CAAWzD,MAAM,QAAjB,SAA0BsM,aAAS,OAACJ,QAAD,IAACA,OAAD,EAACA,EAAKK,UAAWJ,EAAYzM,SAChE,cAAC+D,EAAA,EAAD,CAAWzD,MAAM,QAAjB,SACE,cAAC0H,EAAA,EAAD,CAAY3E,QAjCO,WACvBA,EAAQmJ,IAgCJ,SACE,cAAC,OAAD,CAAMH,KAAMS,e,kCCtDtB,IAAIC,EAAyBC,EAAQ,KAEjCC,EAA0BD,EAAQ,KAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CpN,OAAO,IAEToN,EAAQC,aAAU,EAENJ,EAAwBD,EAAQ,IAA5C,IAEIM,EAAiBP,EAAuBC,EAAQ,MAEhDO,EAAcP,EAAQ,GAEtBQ,GAAW,EAAIF,EAAeD,UAAuB,EAAIE,EAAYE,KAAK,OAAQ,CACpFC,EAAG,0GACD,SAEJN,EAAQC,QAAUG","file":"static/js/10.0d7473a3.chunk.js","sourcesContent":["export const getOrderStatusColor = (status) => {\n  switch (status) {\n    case 'pending':\n      return 'warning';\n    case 'completed':\n      return 'success';\n    case 'cancelled':\n      return 'error';\n    default:\n      // confirmed, shipping\n      return 'info';\n  }\n};\n\nexport const getPaymentStatusColor = (status) => {\n  switch (status) {\n    case 'pending':\n      return 'warning';\n    case 'paid':\n      return 'success';\n    case 'cancelled':\n      return 'error';\n    default:\n      return 'info';\n  }\n};\n","import {\n  Box,\n  Card,\n  Divider,\n  Grid,\n  Link,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\n// hooks\nimport { useLocales } from '../../../hooks';\n// components\nimport { ImageBrokenIcon } from '../../../assets';\nimport { ThumbImgStyle } from '../../@styled';\nimport Label from '../../Label';\nimport Scrollbar from '../../Scrollbar';\n// utils\nimport { fCurrency } from '../../../utils/formatNumber';\nimport { getOrderStatusColor, getPaymentStatusColor } from '../../../utils/labelColor';\n\nconst RowResultStyle = styled(TableRow)(({ theme }) => ({\n  '& td': {\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1)\n  }\n}));\n\n// const ThumbImgStyle = styled('img')(({ theme }) => ({\n//   width: 64,\n//   height: 64,\n//   objectFit: 'contain',\n//   marginRight: theme.spacing(2),\n//   borderRadius: theme.shape.borderRadiusSm\n// }));\n\nconst ROW_RESULT_CELL_WIDTH = 180;\nconst LEFT_WIDTH = 100;\n\n// eslint-disable-next-line react/prop-types\nconst InfoItem = ({ label, value, valueVariant }) => (\n  <Box display=\"flex\" alignItems=\"center\">\n    <Typography align=\"left\" variant=\"body2\" component=\"span\" sx={{ color: 'text.secondary', width: LEFT_WIDTH }}>\n      {label}\n    </Typography>\n    <Typography variant={valueVariant} sx={{ flex: 1, marginLeft: 3 }}>\n      {value}\n    </Typography>\n  </Box>\n);\n\nexport default function OrderCard({ order, isShowTitle, handleRePay }) {\n  const { t } = useLocales();\n  return (\n    <Card sx={{ pt: 5, px: 5, mb: 5 }}>\n      <Grid container>\n        {isShowTitle && (\n          <>\n            <Grid item xs={12} sm={6} sx={{ mb: 5 }}>\n              <Typography variant=\"body2\" component=\"span\" sx={{ color: 'text.secondary' }}>\n                {t('order.title')}\n              </Typography>\n              <Typography variant=\"h6\" sx={{ display: 'inline-block', ml: 2 }}>\n                {`#${order?.numericId || order?._id}`}\n              </Typography>\n            </Grid>\n\n            <Grid item xs={12} sm={6} sx={{ mb: 5 }}>\n              <Box sx={{ textAlign: { sm: 'right' } }}>\n                <Label color={getOrderStatusColor(order?.status)} sx={{ textTransform: 'uppercase', mb: 1 }}>\n                  {t(`order.status-${order?.status}`)}\n                </Label>\n              </Box>\n            </Grid>\n          </>\n        )}\n\n        <Grid item xs={12} sm={6} sx={{ mb: 5 }}>\n          <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\n            Khách hàng\n          </Typography>\n          <InfoItem\n            label={t('address.full-name')}\n            value={order?.address?.name || order?.customer?.name}\n            valueVariant=\"subtitle1\"\n          />\n          <InfoItem\n            label={t('address.phone')}\n            value={order?.address?.phone || order?.customer?.phone}\n            valueVariant=\"body2\"\n          />\n          {order?.isReceiveAtStore ? (\n            // <InfoItem label={t('cart.receive-at-store')} value=\"\" valueVariant=\"body2\" />\n            <Typography align=\"left\" variant=\"body2\" component=\"span\" sx={{ color: 'text.secondary' }}>\n              {t('cart.receive-at-store')}\n            </Typography>\n          ) : (\n            <InfoItem\n              label={t('address.title')}\n              value={`${order?.address?.street}, ${order?.address?.ward}, ${order?.address?.district}, ${order?.address.province}`}\n              valueVariant=\"body2\"\n            />\n          )}\n        </Grid>\n\n        <Grid item xs={12} sm={6} sx={{ mb: 5 }}>\n          <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled', mr: 2 }}>\n            Tình trạng đơn hàng\n          </Typography>\n          <Stack spacing={1}>\n            <Box display=\"flex\" alignItems=\"center\">\n              <Typography variant=\"body2\" component=\"span\" sx={{ color: 'text.secondary', mr: 2, width: 200 }}>\n                {t('order.payment-method')}\n              </Typography>\n              <Typography variant=\"body2\" component=\"span\">\n                {t(`order.payment-method-${order?.paymentMethod}`)}\n              </Typography>\n            </Box>\n            <Box display=\"flex\" alignItems=\"center\">\n              <Typography variant=\"body2\" component=\"span\" sx={{ color: 'text.secondary', mr: 2, width: 200 }}>\n                {t('order.order-status')}\n              </Typography>\n              <Label color={getOrderStatusColor(order?.status)} sx={{ textTransform: 'uppercase' }}>\n                {t(`order.status-${order?.status}`)}\n              </Label>\n            </Box>\n\n            <Box display=\"flex\" alignItems=\"center\">\n              <Typography variant=\"body2\" component=\"span\" sx={{ color: 'text.secondary', mr: 2, width: 200 }}>\n                {t('order.payment-status')}\n              </Typography>\n              <Label color={getPaymentStatusColor(order?.paymentStatus)} sx={{ textTransform: 'uppercase' }}>\n                {t(`order.payment-status-${order?.paymentStatus}`)}\n              </Label>\n              {handleRePay !== null &&\n                order?.paymentStatus === 'pending' &&\n                ['cash', 'cod', '', undefined, null].indexOf(order?.paymentMethod) < 0 && (\n                  <Link href=\"#\" onClick={handleRePay} sx={{ ml: 2 }}>\n                    Thanh toán ngay\n                  </Link>\n                )}\n            </Box>\n          </Stack>\n        </Grid>\n      </Grid>\n\n      <Scrollbar>\n        <TableContainer sx={{ minWidth: 960 }}>\n          <Table>\n            <TableHead\n              sx={{\n                borderBottom: (theme) => `solid 1px ${theme.palette.divider}`,\n                '& th': { backgroundColor: 'transparent' }\n              }}\n            >\n              <TableRow>\n                <TableCell width={30}>#</TableCell>\n                <TableCell align=\"left\">{t('products.title')}</TableCell>\n                <TableCell align=\"center\">{t('products.quantity')}</TableCell>\n                <TableCell align=\"right\">{t('cart.unit-price')}</TableCell>\n                <TableCell align=\"right\">{t('cart.amount-price')}</TableCell>\n              </TableRow>\n            </TableHead>\n\n            <TableBody>\n              {order?.items.map((item, index) => (\n                <TableRow key={index} sx={{ borderBottom: (theme) => `solid 1px ${theme.palette.divider}` }}>\n                  <TableCell>{index + 1}</TableCell>\n                  <TableCell align=\"left\" sx={{ display: 'flex', alignItems: 'center' }}>\n                    {item?.thumbnail ? (\n                      <ThumbImgStyle alt=\"product image\" src={item?.thumbnail} objectFit=\"contain\" />\n                    ) : (\n                      <ImageBrokenIcon width={64} height={64} marginRight={2} />\n                    )}\n                    <Box sx={{ maxWidth: 560 }}>\n                      <Link underline=\"hover\" variant=\"subtitle2\" target=\"_blank\" href={`/product/${item.productId}`}>\n                        {item.productName}\n                      </Link>\n                      {item.variantName && (\n                        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\n                          {item.variantName}\n                        </Typography>\n                      )}\n                    </Box>\n                  </TableCell>\n                  <TableCell align=\"center\">{item.quantity}</TableCell>\n                  <TableCell align=\"right\">{fCurrency(item.pricePerUnit)}</TableCell>\n                  <TableCell align=\"right\">{fCurrency(item.pricePerUnit * item.quantity)}</TableCell>\n                </TableRow>\n              ))}\n\n              <RowResultStyle>\n                <TableCell colSpan={3} />\n                <TableCell align=\"right\">\n                  <Box sx={{ mt: 2 }} />\n                  <Typography variant=\"body1\">{t('cart.order.sub-total')}</Typography>\n                </TableCell>\n                <TableCell align=\"right\" width={ROW_RESULT_CELL_WIDTH}>\n                  <Box sx={{ mt: 2 }} />\n                  <Typography variant=\"body1\">{fCurrency(order?.subTotal)}</Typography>\n                </TableCell>\n              </RowResultStyle>\n              <RowResultStyle>\n                <TableCell colSpan={3} />\n                <TableCell align=\"right\">\n                  <Typography variant=\"body1\">{t('cart.order.discount')}</Typography>\n                </TableCell>\n                <TableCell align=\"right\" width={ROW_RESULT_CELL_WIDTH}>\n                  <Typography sx={{ color: 'error.main' }}>{fCurrency(-order?.discount)}</Typography>\n                </TableCell>\n              </RowResultStyle>\n\n              {!order?.isReceiveAtStore && (\n                <RowResultStyle>\n                  <TableCell colSpan={3} />\n                  <TableCell align=\"right\">\n                    <Typography variant=\"body1\">{t('cart.order.shipping-fee')}</Typography>\n                  </TableCell>\n                  <TableCell align=\"right\" width={ROW_RESULT_CELL_WIDTH}>\n                    <Typography variant=\"body1\">{fCurrency(order?.shippingFee)}</Typography>\n                  </TableCell>\n                </RowResultStyle>\n              )}\n              <RowResultStyle>\n                <TableCell colSpan={3} />\n                <TableCell align=\"right\">\n                  <Typography variant=\"h6\">{t('cart.order.total')}</Typography>\n                </TableCell>\n                <TableCell align=\"right\" width={ROW_RESULT_CELL_WIDTH}>\n                  <Typography variant=\"h6\">{fCurrency(order?.total)}</Typography>\n                </TableCell>\n              </RowResultStyle>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Scrollbar>\n\n      <Divider sx={{ mt: 5 }} />\n\n      <Grid container>\n        <Grid item xs={12} md={9} sx={{ py: 3 }}>\n          <Typography variant=\"subtitle2\">{t('address.note').toUpperCase()}</Typography>\n          <Typography variant=\"body2\">{order?.address?.note || t('address.note-empty')}</Typography>\n        </Grid>\n        {/* <Grid item xs={12} md={3} sx={{ py: 3, textAlign: 'right' }}>\n              <Typography variant=\"subtitle2\">Have a Question?</Typography>\n              <Typography variant=\"body2\">support@minimals.cc</Typography>\n            </Grid> */}\n      </Grid>\n    </Card>\n  );\n}\n","import PropTypes from 'prop-types';\n// material\nimport {\n  Autocomplete,\n  IconButton,\n  Box,\n  Button,\n  Typography,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n  TextField\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\n// hooks\nimport { useEffect, useState } from 'react';\nimport useLocales from '../../../hooks/useLocales';\n// components\nimport { MotionInView, varFadeInUp } from '../../animate';\nimport OrderCard from './OrderCard';\n\n// ----------------------------------------------------------------------\n\nOrderDetailForm.propTypes = {\n  order: PropTypes.any,\n  open: PropTypes.bool,\n  setOpen: PropTypes.func,\n  handleUpdate: PropTypes.func,\n  actionReOrder: PropTypes.func,\n  actionCancelOrder: PropTypes.func\n};\n\n// ----------------------------------------------------------------------\n\nexport default function OrderDetailForm({ order, open, setOpen, handleUpdate, actionReOrder, actionCancelOrder }) {\n  const { t } = useLocales();\n\n  const [orderStatus, setOrderStatus] = useState('');\n  const [paymentStatus, setPaymentStatus] = useState('');\n  const [paymentMethod, setPaymentMethod] = useState('');\n  const [hasChange, setHasChange] = useState(false);\n\n  const orderStatusList = [\n    {\n      label: t('order.status-pending'),\n      value: 'pending'\n    },\n    {\n      label: t('order.status-confirmed'),\n      value: 'confirmed'\n    },\n    {\n      label: t('order.status-shipping'),\n      value: 'shipping'\n    },\n    {\n      label: t('order.status-completed'),\n      value: 'completed'\n    },\n    {\n      label: t('order.status-cancelled'),\n      value: 'cancelled'\n    }\n  ];\n\n  const paymentStatusList = [\n    {\n      label: t('order.payment-status-pending'),\n      value: 'pending'\n    },\n    {\n      label: t('order.payment-status-paid'),\n      value: 'paid'\n    }\n  ];\n\n  const paymentMethodList = [\n    {\n      label: t('order.payment-method-cash'),\n      value: 'cash'\n    },\n    {\n      label: t('order.payment-method-cod'),\n      value: 'cod'\n    },\n    {\n      label: t('order.payment-method-vnpay'),\n      value: 'vnpay'\n    }\n  ];\n\n  useEffect(() => {\n    setOrderStatus(order?.status);\n    setPaymentStatus(order?.paymentStatus);\n    setPaymentMethod(order?.paymentMethod);\n    setHasChange(false);\n  }, [order]);\n\n  const handleChangeOrderStatus = (event, value) => {\n    setOrderStatus(value.value);\n    if (value.value !== order.status) {\n      setHasChange(true);\n    }\n  };\n\n  const handleChangePaymentStatus = (event, value) => {\n    setPaymentStatus(value.value);\n    if (value.value !== order.paymentStatus) {\n      setHasChange(true);\n    }\n  };\n\n  const handleChangePaymentMethod = (event, value) => {\n    setPaymentMethod(value.value);\n    if (value.value !== order.paymentMethod) {\n      setHasChange(true);\n    }\n  };\n\n  const handleClose = (_event, reason) => {\n    if (reason && (reason === 'backdropClick' || reason === 'escapeKeyDown')) {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const handleSave = () => {\n    handleUpdate(order._id, { status: orderStatus, paymentStatus, paymentMethod });\n    setOpen(false);\n  };\n\n  const handleCancelOrder = () => {\n    actionReOrder(order._id);\n    setOpen(false);\n  };\n\n  const handleReOrder = () => {\n    actionCancelOrder(order._id);\n    setOpen(false);\n  };\n\n  const renderDialogActions = () => {\n    if (!handleUpdate) {\n      return (\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"flex-end\" sx={{ height: '100%' }}>\n          <Button\n            sx={{ mr: 1 }}\n            size=\"large\"\n            color=\"inherit\"\n            variant=\"outlined\"\n            onClick={handleCancelOrder}\n            disabled={!['pending', 'cancelled'].includes(order?.status)}\n          >\n            Hủy đơn hàng\n          </Button>\n          <Button size=\"large\" variant=\"outlined\" onClick={handleReOrder} disabled={order?.status !== 'completed'}>\n            Đặt lại\n          </Button>\n        </Box>\n      );\n    }\n\n    return (\n      <Grid container spacing={2}>\n        <Grid item xs={6} sm={3}>\n          <Autocomplete\n            fullWidth\n            disableClearable\n            options={orderStatusList}\n            getOptionLabel={(item) => item?.label}\n            value={orderStatusList.find((item) => item.value === orderStatus)}\n            renderInput={(params) => <TextField {...params} label={t('order.order-status')} />}\n            onChange={handleChangeOrderStatus}\n          />\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Autocomplete\n            fullWidth\n            disableClearable\n            options={paymentStatusList}\n            getOptionLabel={(item) => item?.label}\n            value={paymentStatusList.find((item) => item.value === paymentStatus)}\n            renderInput={(params) => <TextField {...params} label={t('order.payment-status')} />}\n            onChange={handleChangePaymentStatus}\n          />\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Autocomplete\n            fullWidth\n            disableClearable\n            options={paymentMethodList}\n            getOptionLabel={(item) => item?.label}\n            value={paymentMethodList.find((item) => item.value === paymentMethod)}\n            renderInput={(params) => <TextField {...params} label={t('order.payment-method')} />}\n            onChange={handleChangePaymentMethod}\n          />\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Box display=\"flex\" alignItems=\"center\" sx={{ height: '100%' }}>\n            <Button sx={{ mr: 1 }} fullWidth size=\"large\" color=\"inherit\" variant=\"outlined\" onClick={handleClose}>\n              {t('common.cancel')}\n            </Button>\n            <Button fullWidth size=\"large\" variant=\"outlined\" disabled={!hasChange} onClick={handleSave}>\n              {t('common.save')}\n            </Button>\n          </Box>\n        </Grid>\n      </Grid>\n    );\n  };\n\n  return (\n    <Dialog fullWidth maxWidth=\"lg\" open={open} onClose={handleClose}>\n      <DialogTitle>\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Typography variant=\"h4\" marginBottom={2} sx={{ textTransform: 'uppercase', mb: 0 }}>\n            Đơn hàng #{order?.numericId}\n          </Typography>\n          <IconButton color=\"inherit\" edge=\"start\" onClick={handleClose}>\n            <CloseIcon />\n          </IconButton>\n        </Box>\n      </DialogTitle>\n      <DialogContent>\n        <MotionInView variants={varFadeInUp}>\n          <OrderCard order={order} isShowTitle={false} />\n        </MotionInView>\n      </DialogContent>\n      <DialogActions>\n        <Box sx={{ width: '100%' }}>{renderDialogActions()}</Box>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import PropTypes from 'prop-types';\n// material\nimport { visuallyHidden } from '@material-ui/utils';\nimport { Box, TableRow, TableCell, TableHead, TableSortLabel } from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nOrderListHead.propTypes = {\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  headLabel: PropTypes.array.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired\n};\n\nexport default function OrderListHead({\n  order,\n  orderBy,\n  rowCount,\n  headLabel,\n  numSelected,\n  onRequestSort,\n  onSelectAllClick\n}) {\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headLabel.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <Box component=\"span\" sx={{ ...visuallyHidden }}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\n// icons\nimport { Icon } from '@iconify/react';\nimport searchFill from '@iconify/icons-eva/search-fill';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\nimport editFill from '@iconify/icons-eva/edit-fill';\nimport trash2Fill from '@iconify/icons-eva/trash-2-fill';\nimport roundFilterList from '@iconify/icons-ic/round-filter-list';\n// material\nimport { useTheme, experimentalStyled as styled } from '@material-ui/core/styles';\nimport {\n  Autocomplete,\n  Box,\n  Grid,\n  Toolbar,\n  Tooltip,\n  Typography,\n  TextField,\n  IconButton,\n  OutlinedInput,\n  InputAdornment\n} from '@material-ui/core';\n\nimport useLocales from '../../../hooks/useLocales';\n\n// ----------------------------------------------------------------------\n\nconst ToolbarStyle = styled(Toolbar)(({ theme }) => ({\n  height: 96,\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: theme.spacing(0, 1, 0, 3),\n  [theme.breakpoints.down('sm')]: {\n    height: 96 * 2\n  }\n}));\n\nconst SearchStyle = styled(OutlinedInput)(({ theme }) => ({\n  width: 240,\n  transition: theme.transitions.create(['box-shadow', 'width'], {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter\n  }),\n  '&::placeholder': {\n    fontStyle: 'italic'\n  },\n  '&.Mui-focused': { width: '100%', boxShadow: theme.customShadows.z8 },\n  '& fieldset': {\n    borderWidth: `1px !important`,\n    borderColor: `${theme.palette.grey[500_32]} !important`\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nOrderListToolbar.propTypes = {\n  search: PropTypes.string,\n  onSearchChange: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  orderStatus: PropTypes.string,\n  onChangeOrderStatus: PropTypes.func,\n  paymentStatus: PropTypes.string,\n  onChangePaymentStatus: PropTypes.func\n};\n\nexport default function OrderListToolbar({\n  search,\n  onSearchChange,\n  onKeyDown,\n  orderStatus,\n  onChangeOrderStatus,\n  paymentStatus,\n  onChangePaymentStatus\n}) {\n  const { t } = useLocales();\n\n  const orderStatusList = [\n    {\n      label: t('order.status-all'),\n      value: ''\n    },\n    {\n      label: t('order.status-pending'),\n      value: 'pending'\n    },\n    {\n      label: t('order.status-confirmed'),\n      value: 'confirmed'\n    },\n    {\n      label: t('order.status-shipping'),\n      value: 'shipping'\n    },\n    {\n      label: t('order.status-completed'),\n      value: 'completed'\n    },\n    {\n      label: t('order.status-cancelled'),\n      value: 'cancelled'\n    }\n  ];\n\n  const paymentStatusList = [\n    {\n      label: t('order.payment-status-all'),\n      value: ''\n    },\n    {\n      label: t('order.payment-status-pending'),\n      value: 'pending'\n    },\n    {\n      label: t('order.payment-status-paid'),\n      value: 'paid'\n    }\n  ];\n\n  return (\n    <>\n      <ToolbarStyle>\n        <Box sx={{ width: '100%' }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <SearchStyle\n                size=\"small\"\n                value={search}\n                onChange={onSearchChange}\n                onKeyDown={onKeyDown}\n                title={t('order.search-placeholder-desc')}\n                placeholder={t('order.search-placeholder')}\n                startAdornment={\n                  <InputAdornment position=\"start\">\n                    <Box component={Icon} icon={searchFill} sx={{ color: 'text.disabled' }} />\n                  </InputAdornment>\n                }\n              />\n            </Grid>\n            <Grid item xs={6} sm={3}>\n              <Autocomplete\n                size=\"small\"\n                fullWidth\n                disableClearable\n                options={orderStatusList}\n                getOptionLabel={(item) => item?.label}\n                value={orderStatusList.find((item) => item.value === orderStatus)}\n                // filterSelectedOptions\n                renderInput={(params) => <TextField {...params} label={t('order.order-status')} />}\n                onChange={onChangeOrderStatus}\n              />\n            </Grid>\n            <Grid item xs={6} sm={3}>\n              <Autocomplete\n                size=\"small\"\n                fullWidth\n                disableClearable\n                options={paymentStatusList}\n                getOptionLabel={(item) => item?.label}\n                value={paymentStatusList.find((item) => item.value === paymentStatus)}\n                // filterSelectedOptions\n                renderInput={(params) => <TextField {...params} label={t('order.payment-status')} />}\n                onChange={onChangePaymentStatus}\n              />\n            </Grid>\n          </Grid>\n        </Box>\n      </ToolbarStyle>\n    </>\n  );\n}\n","/* eslint-disable react/prop-types */\n// icons\nimport { Icon } from '@iconify/react';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\n// material\nimport { IconButton, TableCell, TableRow, Typography } from '@material-ui/core';\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\n//\nimport useLocales from '../../../hooks/useLocales';\nimport { fCurrency } from '../../../utils/formatNumber';\n// utils\nimport { fDateTime } from '../../../utils/formatTime';\nimport { getOrderStatusColor, getPaymentStatusColor } from '../../../utils/labelColor';\n// components\nimport Label from '../../Label';\n\n// ----------------------------------------------------------------------\n\n// eslint-disable-next-line react/prop-types\nexport default function OrderTableRow({ row, onClick }) {\n  const { t, currentLang } = useLocales();\n\n  const handleViewDetail = () => {\n    onClick(row);\n  };\n\n  return (\n    <TableRow hover>\n      <TableCell align=\"left\" scope=\"row\" padding=\"none\">\n        {row?.numericId}\n      </TableCell>\n      <TableCell scope=\"row\" padding=\"none\">\n        <Typography variant=\"subtitle2\" noWrap>\n          {row?.customer?.name}\n        </Typography>\n      </TableCell>\n      <TableCell align=\"left\" padding=\"none\">\n        {row?.customer?.phone}\n      </TableCell>\n      <TableCell align=\"left\" padding=\"none\">\n        <Label color={getOrderStatusColor(row?.status)} sx={{ textTransform: 'uppercase' }}>\n          {t(`order.status-${row?.status}`)}\n        </Label>\n      </TableCell>\n      <TableCell align=\"left\" padding=\"none\">\n        <Label color={getPaymentStatusColor(row?.paymentStatus)} sx={{ textTransform: 'uppercase' }}>\n          {t(`order.payment-status-${row?.paymentStatus}`)}\n        </Label>\n      </TableCell>\n      <TableCell align=\"left\" padding=\"none\">\n        {t(`order.payment-method-${row?.paymentMethod}`)}\n      </TableCell>\n      <TableCell align=\"right\">{fCurrency(row?.total, currentLang.value)}</TableCell>\n      <TableCell align=\"right\">{fDateTime(row?.createdAt, currentLang.value)}</TableCell>\n      <TableCell align=\"right\">\n        <IconButton onClick={handleViewDetail}>\n          <Icon icon={eyeFill} />\n        </IconButton>\n      </TableCell>\n    </TableRow>\n  );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;"],"sourceRoot":""}