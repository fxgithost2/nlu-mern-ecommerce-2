{"version":3,"sources":["components/@material-extend/table/MTableHead.jsx","components/@material-extend/table/MTableToolbar.jsx","components/dashboard/category-list/CategoryMoreMenu.jsx","pages/dashboard/categories/PageCategoryList.jsx"],"names":["MTableHead","order","orderBy","rowCount","headLabel","numSelected","onRequestSort","onSelectAllClick","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","map","property","id","label","align","disablePadding","sortDirection","TableSortLabel","active","direction","onClick","event","Box","component","sx","visuallyHidden","RootStyle","styled","Toolbar","height","display","justifyContent","theme","spacing","SearchStyle","OutlinedInput","width","transition","transitions","create","easing","easeInOut","duration","shorter","boxShadow","customShadows","z8","borderWidth","borderColor","palette","grey","MTableToolbar","searchPlaceHolder","initialValue","onSearch","onFilter","isLight","useTheme","mode","useState","searchValue","setSearchValue","color","bgcolor","Typography","variant","value","target","onKeyPress","key","placeholder","size","startAdornment","InputAdornment","position","Icon","icon","searchFill","Tooltip","title","IconButton","editFill","eyeFill","trash2Fill","stopPropagation","roundFilterList","CategoryMoreMenu","editTitle","onEdit","deleteTitle","onDelete","nameInfo","t","useLocales","ref","useRef","isOpen","setIsOpen","openDialogConfirm","setOpenDialogConfirm","textConfirmDelete","setTextConfirmDelete","useEffect","text","moreVerticalFill","Menu","open","anchorEl","current","onClose","PaperProps","maxWidth","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","ListItemIcon","ListItemText","primary","primaryTypographyProps","trash2Outline","DialogConfirm","setOpen","handleSubmit","textContent","PageCategoryList","currentLang","dispatch","useDispatch","enqueueSnackbar","useSnackbar","useSelector","state","category","categoriesList","list","isLoading","error","deletedIds","setOrder","setOrderBy","selected","setSelected","page","setPage","isCompact","setIsCompact","rowsPerPage","setRowsPerPage","currentId","setCurrentId","openForm","setOpenForm","deletingId","setDeletingId","getAllCategories","mgs","message","some","x","tableHeads","emptyRows","Math","max","length","LoadingScreen","Page","Container","CategoryForm","HeaderBreadcrumbs","heading","links","name","href","PATH_DASHBOARD","root","app","action","Button","startIcon","plusFill","Card","Scrollbar","TableContainer","minWidth","Table","newSelected","n","slug","count","indexOf","_id","TableBody","stableSort","getComparator","slice","row","index","image","createdAt","updatedAt","isHide","countProduct","isItemSelected","isSelected","labelId","hover","selectedIndex","concat","handleClick","role","aria-checked","tabIndex","scope","py","alignItems","alt","src","marginRight","noWrap","Label","style","fDateTime","e","deleteCategory","splice","handleDeleteCategory","colSpan","onPageChange","newPage","onRowsPerPageChange","parseInt","px","top","md","FormControlLabel","control","Switch","EmptyCard"],"mappings":"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","file":"static/js/36.d699873b.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n// material\nimport { visuallyHidden } from '@material-ui/utils';\nimport { Box, Checkbox, TableRow, TableCell, TableHead, TableSortLabel } from '@material-ui/core';\n\n// ----------------------------------------------------------------------\n\nMTableHead.propTypes = {\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  headLabel: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      align: PropTypes.oneOf('left', 'center', 'right', 'justify', 'inherit'),\n      disablePadding: PropTypes.bool\n    })\n  ),\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired\n};\n\nexport default function MTableHead({\n  order,\n  orderBy,\n  rowCount,\n  headLabel,\n  numSelected,\n  onRequestSort,\n  onSelectAllClick\n}) {\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n          />\n        </TableCell>\n        {headLabel.map(({ id, label, align, disablePadding }) => (\n          <TableCell\n            key={id}\n            align={align ?? 'left'}\n            padding={disablePadding ? 'none' : 'normal'}\n            sortDirection={orderBy === id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === id}\n              direction={orderBy === id ? order : 'asc'}\n              onClick={createSortHandler(id)}\n            >\n              {label}\n              {orderBy === id && (\n                <Box component=\"span\" sx={{ ...visuallyHidden }}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              )}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","import editFill from '@iconify/icons-eva/edit-fill';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport searchFill from '@iconify/icons-eva/search-fill';\nimport trash2Fill from '@iconify/icons-eva/trash-2-fill';\nimport roundFilterList from '@iconify/icons-ic/round-filter-list';\nimport { Icon } from '@iconify/react';\n// material\nimport { Box, IconButton, InputAdornment, OutlinedInput, Toolbar, Tooltip, Typography } from '@material-ui/core';\nimport { experimentalStyled as styled, useTheme } from '@material-ui/core/styles';\n\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Toolbar)(({ theme }) => ({\n  height: 64,\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: theme.spacing(0, 1, 0, 1)\n}));\n\nconst SearchStyle = styled(OutlinedInput)(({ theme }) => ({\n  width: 240,\n  transition: theme.transitions.create(['box-shadow', 'width'], {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter\n  }),\n  '&.Mui-focused': { width: 320, boxShadow: theme.customShadows.z8 },\n  '& fieldset': {\n    borderWidth: `1px !important`,\n    borderColor: `${theme.palette.grey[500_32]} !important`\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nMTableToolbar.propTypes = {\n  searchPlaceHolder: PropTypes.string.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  initialValue: PropTypes.string,\n  onSearch: PropTypes.func,\n  onFilter: PropTypes.func\n};\n\nexport default function MTableToolbar({ searchPlaceHolder, numSelected, initialValue, onSearch, onFilter }) {\n  const theme = useTheme();\n  const isLight = theme.palette.mode === 'light';\n\n  const [searchValue, setSearchValue] = useState(initialValue);\n\n  const handleOnChange = (event) => {\n    setSearchValue(event.target.value);\n  };\n\n  const handleOnKeyPress = (event) => {\n    if (event.key === 'Enter' && typeof onSearch === 'function') {\n      onSearch(event, searchValue);\n    }\n  };\n\n  const handleOnFilter = (event) => {\n    if (typeof onFilter === 'function') {\n      onFilter();\n    } else {\n      event.stopPropagation();\n    }\n  };\n\n  return (\n    <RootStyle\n      sx={{\n        ...(numSelected > 0 && {\n          color: isLight ? 'primary.main' : 'text.primary',\n          bgcolor: isLight ? 'primary.lighter' : 'primary.dark'\n        })\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <SearchStyle\n          value={searchValue}\n          onChange={handleOnChange}\n          onKeyPress={handleOnKeyPress}\n          placeholder={searchPlaceHolder}\n          size=\"small\"\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <Box component={Icon} icon={searchFill} sx={{ color: 'text.disabled' }} />\n            </InputAdornment>\n          }\n        />\n      )}\n\n      {numSelected > 0 ? (\n        <Box sx={{ display: 'flex', justifyContent: 'right' }}>\n          {numSelected === 1 && (\n            <>\n              <Tooltip title=\"Edit\">\n                <IconButton>\n                  <Icon icon={editFill} />\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Hide / show\">\n                <IconButton>\n                  <Icon icon={eyeFill} />\n                </IconButton>\n              </Tooltip>\n            </>\n          )}\n          <Tooltip title=\"Delete\">\n            <IconButton>\n              <Icon icon={trash2Fill} />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton onClick={handleOnFilter}>\n            <Icon icon={roundFilterList} />\n          </IconButton>\n        </Tooltip>\n      )}\n    </RootStyle>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useEffect, useRef, useState } from 'react';\nimport editFill from '@iconify/icons-eva/edit-fill';\nimport trash2Outline from '@iconify/icons-eva/trash-2-outline';\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\n// material\nimport { Menu, MenuItem, IconButton, ListItemIcon, ListItemText } from '@material-ui/core';\nimport DialogConfirm from '../../dialog/DialogConfirm';\nimport useLocales from '../../../hooks/useLocales';\n\n// ----------------------------------------------------------------------\n\nCategoryMoreMenu.propTypes = {\n  editTitle: PropTypes.string,\n  onEdit: PropTypes.func,\n  deleteTitle: PropTypes.string,\n  onDelete: PropTypes.func,\n  nameInfo: PropTypes.string\n};\n\nexport default function CategoryMoreMenu({ editTitle, onEdit, deleteTitle, onDelete, nameInfo }) {\n  const { t } = useLocales();\n  const ref = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [openDialogConfirm, setOpenDialogConfirm] = useState(false);\n  const [textConfirmDelete, setTextConfirmDelete] = useState('');\n\n  useEffect(() => {\n    const text = t('dashboard.categories.confirm-delete', { nameInfo });\n    setTextConfirmDelete(text);\n  }, [nameInfo]);\n\n  const handleEdit = (event) => {\n    if (onEdit && typeof onEdit === 'function') {\n      onEdit();\n    }\n    setIsOpen(false);\n  };\n\n  const handleDelete = (event) => {\n    setOpenDialogConfirm(true);\n    setIsOpen(false);\n  };\n\n  return (\n    <>\n      <IconButton ref={ref} onClick={() => setIsOpen(true)}>\n        <Icon icon={moreVerticalFill} width={20} height={20} />\n      </IconButton>\n\n      <Menu\n        open={isOpen}\n        anchorEl={ref.current}\n        onClose={() => setIsOpen(false)}\n        PaperProps={{\n          sx: { width: 200, maxWidth: '100%' }\n        }}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      >\n        <MenuItem onClick={handleEdit} sx={{ color: 'text.secondary' }}>\n          <ListItemIcon>\n            <Icon icon={editFill} width={24} height={24} />\n          </ListItemIcon>\n          <ListItemText primary={editTitle} primaryTypographyProps={{ variant: 'body2' }} />\n        </MenuItem>\n        <MenuItem onClick={handleDelete} sx={{ color: 'text.secondary' }}>\n          <ListItemIcon>\n            <Icon icon={trash2Outline} width={24} height={24} />\n          </ListItemIcon>\n          <ListItemText primary={deleteTitle} primaryTypographyProps={{ variant: 'body2' }} />\n        </MenuItem>\n      </Menu>\n      <DialogConfirm\n        open={openDialogConfirm}\n        setOpen={setOpenDialogConfirm}\n        handleSubmit={onDelete}\n        textContent={textConfirmDelete}\n      />\n    </>\n  );\n}\n","import { Icon } from '@iconify/react';\nimport { useState, useEffect } from 'react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\n// material\nimport { useTheme, experimentalStyled as styled } from '@material-ui/core/styles';\nimport {\n  Box,\n  Button,\n  Card,\n  Checkbox,\n  Container,\n  FormControlLabel,\n  Switch,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport { useSnackbar } from 'notistack';\n// redux\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAllCategories, deleteCategory } from '../../../redux/slices/categorySlice';\nimport { useLocales } from '../../../hooks';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n// components\nimport { ThumbImgStyle } from '../../../components/@styled';\nimport { MTablePagination } from '../../../components/@material-extend';\nimport { MTableHead, MTableToolbar } from '../../../components/@material-extend/table';\n\nimport Page from '../../../components/Page';\nimport Label from '../../../components/Label';\nimport Scrollbar from '../../../components/Scrollbar';\nimport HeaderBreadcrumbs from '../../../components/HeaderBreadcrumbs';\nimport LoadingScreen from '../../../components/LoadingScreen';\nimport EmptyCard from '../../../components/EmptyCard';\nimport { CategoryMoreMenu } from '../../../components/dashboard/category-list';\nimport CategoryForm from './CategoryForm';\nimport { ImageBrokenIcon } from '../../../assets';\n\n// utils\nimport { fDateTime } from '../../../utils/formatTime';\nimport { stableSort, getComparator } from '../../../helper/listHelper';\n\n// ----------------------------------------------------------------------\n\nexport default function PageCategoryList() {\n  const { t, currentLang } = useLocales();\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const { list: categoriesList, isLoading, error, deletedIds } = useSelector((state) => state.category);\n\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState('order');\n  const [selected, setSelected] = useState([]);\n  const [page, setPage] = useState(0);\n  const [isCompact, setIsCompact] = useState(false);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [currentId, setCurrentId] = useState(null);\n  const [openForm, setOpenForm] = useState(false);\n  const [deletingId, setDeletingId] = useState('');\n\n  useEffect(() => {\n    dispatch(getAllCategories());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (error) {\n      const mgs = error?.message?.[currentLang.value] || 'Có lỗi xảy ra !';\n      enqueueSnackbar(mgs, { variant: 'error' });\n    }\n    if (deletedIds && deletedIds.some((x) => x === deletingId)) {\n      enqueueSnackbar('Xóa danh mục thành công', { variant: 'success' });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [error, deletedIds]);\n\n  const handleDeleteCategory = (id, slug) => {\n    setDeletingId(id);\n    dispatch(deleteCategory(id));\n    const selectedIndex = selected.indexOf(slug);\n    if (selectedIndex > -1) {\n      selected.splice(selectedIndex, 1);\n    }\n    setSelected(selected);\n  };\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelected = categoriesList.map((n) => n.slug);\n      setSelected(newSelected);\n      if (selected.count === 1) {\n        setCurrentId(categoriesList[categoriesList.indexOf(selected[0])]._id);\n      }\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, slug) => {\n    const selectedIndex = selected.indexOf(slug);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, slug);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleCreateNew = () => {\n    setCurrentId(null);\n    setOpenForm(true);\n  };\n\n  const handleEdit = (categoryId) => {\n    setCurrentId(categoryId);\n    setOpenForm(true);\n  };\n\n  const isSelected = (slug) => selected.indexOf(slug) !== -1;\n\n  const tableHeads = [\n    {\n      id: 'order',\n      align: 'center',\n      disablePadding: true,\n      label: t('common.order')\n    },\n    {\n      id: 'name',\n      align: 'left',\n      disablePadding: false,\n      label: t('dashboard.categories.name')\n    },\n    {\n      id: 'isHide',\n      align: 'left',\n      disablePadding: false,\n      label: t('dashboard.categories.status')\n    },\n    {\n      id: 'countProduct',\n      align: 'left',\n      disablePadding: false,\n      label: t('dashboard.categories.available')\n    },\n    {\n      id: 'createdAt',\n      align: 'right',\n      disablePadding: false,\n      label: t('dashboard.created-at')\n    },\n    {\n      id: 'updatedAt',\n      align: 'right',\n      disablePadding: false,\n      label: t('dashboard.updated-at')\n    },\n    {\n      id: 'action',\n      align: 'right',\n      disablePadding: false\n    }\n  ];\n\n  // Avoid a layout jump when reaching the last page with empty categoriesList.\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - categoriesList.length) : 0;\n\n  if (isLoading) {\n    return <LoadingScreen />;\n  }\n\n  return (\n    <Page title={t('dashboard.categories.page-title')}>\n      <Container maxWidth={false}>\n        <CategoryForm open={openForm} setOpen={setOpenForm} currentId={currentId} setCurrentId={setCurrentId} />\n\n        <HeaderBreadcrumbs\n          heading={t('dashboard.categories.heading')}\n          links={[\n            { name: t('dashboard.title'), href: PATH_DASHBOARD.root },\n            {\n              name: t('dashboard.management'),\n              href: PATH_DASHBOARD.app.root\n            },\n            { name: t('dashboard.categories.heading') }\n          ]}\n          action={\n            <Button variant=\"contained\" startIcon={<Icon icon={plusFill} />} onClick={handleCreateNew}>\n              {t('dashboard.categories.add')}\n            </Button>\n          }\n        />\n\n        {categoriesList.length > 0 ? (\n          <Card>\n            <MTableToolbar searchPlaceHolder={t('dashboard.categories.search')} numSelected={selected.length} />\n\n            <Scrollbar>\n              <TableContainer sx={{ minWidth: 800 }}>\n                <Table size={isCompact ? 'small' : 'medium'}>\n                  <MTableHead\n                    order={order}\n                    orderBy={orderBy}\n                    headLabel={tableHeads}\n                    numSelected={selected.length}\n                    onRequestSort={handleRequestSort}\n                    rowCount={categoriesList.length}\n                    onSelectAllClick={handleSelectAllClick}\n                  />\n                  <TableBody>\n                    {stableSort(categoriesList, getComparator(order, orderBy))\n                      .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                      .map((row, index) => {\n                        const { _id, slug, order, name, image, createdAt, updatedAt, isHide, countProduct } = row;\n                        const isItemSelected = isSelected(slug);\n                        const labelId = `enhanced-table-checkbox-${index}`;\n\n                        return (\n                          <TableRow\n                            hover\n                            onClick={(event) => handleClick(event, slug)}\n                            role=\"checkbox\"\n                            aria-checked={isItemSelected}\n                            tabIndex={-1}\n                            key={_id}\n                            selected={isItemSelected}\n                          >\n                            <TableCell padding=\"checkbox\">\n                              <Checkbox checked={isItemSelected} />\n                            </TableCell>\n                            <TableCell align=\"left\" component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                              {order}\n                            </TableCell>\n                            {isCompact ? (\n                              <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                                {name}\n                              </TableCell>\n                            ) : (\n                              <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                                <Box sx={{ py: 2, display: 'flex', alignItems: 'center' }}>\n                                  {image ? (\n                                    <ThumbImgStyle alt={name} src={image} />\n                                  ) : (\n                                    <ImageBrokenIcon width={64} height={64} marginRight={2} />\n                                  )}\n                                  <Typography variant=\"subtitle2\" noWrap>\n                                    {name}\n                                  </Typography>\n                                </Box>\n                              </TableCell>\n                            )}\n                            <TableCell align=\"left\">\n                              <Label\n                                variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'}\n                                color={isHide ? 'default' : 'success'}\n                              >\n                                {t(`dashboard.categories.${isHide ? 'hidden' : 'visible'}`)}\n                              </Label>\n                            </TableCell>\n                            <TableCell align=\"left\">{countProduct}</TableCell>\n                            <TableCell align=\"right\" style={{ minWidth: 160 }}>\n                              {fDateTime(createdAt, currentLang.value)}\n                            </TableCell>\n                            <TableCell align=\"right\" style={{ minWidth: 160 }}>\n                              {fDateTime(updatedAt, currentLang.value)}\n                            </TableCell>\n                            <TableCell align=\"right\" onClick={(e) => e.stopPropagation()}>\n                              <CategoryMoreMenu\n                                editTitle={t('common.edit')}\n                                onEdit={() => handleEdit(_id)}\n                                deleteTitle={t('common.delete')}\n                                onDelete={() => handleDeleteCategory(_id, slug)}\n                                nameInfo={name}\n                              />\n                            </TableCell>\n                          </TableRow>\n                        );\n                      })}\n                    {emptyRows > 0 && (\n                      <TableRow style={{ height: (isCompact ? 33 : 53) * emptyRows }}>\n                        <TableCell colSpan={tableHeads.length + 1} />\n                      </TableRow>\n                    )}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Scrollbar>\n\n            <Box sx={{ position: 'relative' }}>\n              <MTablePagination\n                count={categoriesList.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n              />\n              <Box sx={{ px: 3, py: 1.5, top: 0, position: { md: 'absolute' } }}>\n                <FormControlLabel\n                  control={<Switch checked={isCompact} onChange={(e) => setIsCompact(e.target.checked)} />}\n                  label={t('common.small-padding')}\n                />\n              </Box>\n            </Box>\n          </Card>\n        ) : (\n          <EmptyCard title={t('dashboard.categories.title-not-found')} />\n        )}\n      </Container>\n    </Page>\n  );\n}\n"],"sourceRoot":""}